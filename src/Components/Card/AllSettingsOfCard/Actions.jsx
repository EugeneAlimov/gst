import React, { useState, useEffect } from "react";

//import MUI components
import Box from "@mui/material/Box";
import Typography from "@mui/material/Typography";
import FormControlLabel from "@mui/material/FormControlLabel";
import Divider from "@mui/material/Divider";
import Checkbox from "@mui/material/Checkbox";
import Switch from "@mui/material/Switch";

//import application components
import TaskTerminIcon from "../CardStatisticIconsSection/TaskTerminIcon";

//import styles
import * as Style from "./styleConst";

// RTK Query –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏
import { useUpdateCardDetailMutation } from "../../../Redux/cards/cards-operations";

export default function Actions({
  date_time_finish,
  date_time_start,
  status,
  cardId, // –ù–û–í–´–ô: –ù—É–∂–µ–Ω –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
  is_completed = false, // –ù–û–í–´–ô: –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
  reminder_offset_minutes, // –ù–û–í–´–ô: –¢–µ–∫—É—â–µ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
}) {
  const [complited, setComplited] = useState(is_completed);
  const [subscribed, setSubscribed] = useState(false);
  const [isLoading, setIsLoading] = useState(false);

  // RTK Query –º—É—Ç–∞—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏
  const [updateCard] = useUpdateCardDetailMutation();

  // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å –ø—Ä–æ–ø—Å–∞–º–∏
  useEffect(() => {
    setComplited(is_completed);
  }, [is_completed]);

  const handleComplitedChange = async (event) => {
    const newCompletedState = event.target.checked;

    if (!cardId) {
      console.error("‚ùå –ù–µ—Ç cardId –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π");
      return;
    }

    setIsLoading(true);

    try {
      // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
      const updateData = {
        is_completed: newCompletedState,
      };

      // –ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫–ª—é—á–∞–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏
      if (newCompletedState && reminder_offset_minutes && reminder_offset_minutes !== -10) {
        updateData.reminder_offset_minutes = null; // –û—Ç–∫–ª—é—á–∞–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
        console.log("üîï –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫–ª—é—á–∞–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏");
      }

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
      console.log("üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:", updateData);
      const result = await updateCard({ id: cardId, ...updateData }).unwrap();

      console.log("‚úÖ –°—Ç–∞—Ç—É—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω:", result);
      setComplited(newCompletedState);

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      if (newCompletedState) {
        console.log("üéâ –ó–∞–¥–∞—á–∞ –æ—Ç–º–µ—á–µ–Ω–∞ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–∞—è");
        if (reminder_offset_minutes && reminder_offset_minutes !== -10) {
          console.log("üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã");
        }
      } else {
        console.log("üîÑ –ó–∞–¥–∞—á–∞ —Å–Ω–æ–≤–∞ –∞–∫—Ç–∏–≤–Ω–∞");
      }
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:", error);

      // –û—Ç–∫–∞—Ç—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ UI
      setComplited(!newCompletedState);

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      const errorMessage = error.data?.detail || error.message || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞";
      alert(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å: ${errorMessage}`);
    } finally {
      setIsLoading(false);
    }
  };

  const handleSubscribeChange = (event) => {
    setSubscribed(event.target.checked);
  };

  return (
    <Box sx={Style.cardActionsMainContainer}>
      <Typography sx={Style.text}>–î–µ–π—Å—Ç–≤–∏—è —Å –∫–∞—Ä—Ç–æ—á–∫–æ–π:</Typography>

      <Box sx={Style.cardActionsContainer}>
        <Box sx={Style.cardSubscrContainer}>
          <FormControlLabel
            sx={{ marginX: "0px", width: "284px", justifyContent: "space-between" }}
            value="top"
            control={
              <Switch
                checked={subscribed}
                onChange={handleSubscribeChange}
                inputProps={{ "aria-label": "controlled" }}
              />
            }
            label={
              <Typography sx={{ cursor: "pointer", fontSize: "14px", color: "#172b4d" }}>
                –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
              </Typography>
            }
            labelPlacement="start"
          />
        </Box>

        <Box sx={Style.cardSubscrContainer}>
          <Typography
            sx={{
              cursor: "default",
              fontSize: "14px",
              color: "#172b4d",
              marginRight: "10px",
            }}
          >
            –°—Ç–∞—Ç—É—Å –∑–∞–¥–∞–Ω–∏—è:
          </Typography>
          <TaskTerminIcon
            status={status}
            date_time_finish={date_time_finish}
            date_time_start={date_time_start}
            boxStyle={Style.boxStyle}
            iconStyle={Style.iconStyle}
            typographyStyle={Style.typographyStyle}
          />
        </Box>
      </Box>

      <Divider orientation="horizontal" variant="middle" sx={{ marginBottom: "15px" }} />

      <Box sx={Style.cardComplContainer}>
        <FormControlLabel
          sx={{ marginX: "0px", width: "284px", justifyContent: "space-between" }}
          value="top"
          control={
            <Checkbox
              checked={complited}
              onChange={handleComplitedChange}
              disabled={isLoading}
              inputProps={{ "aria-label": "controlled" }}
            />
          }
          label={
            <Typography
              sx={{
                cursor: "pointer",
                fontSize: "14px",
                color: complited ? "#2e7d32" : "#172b4d",
                fontWeight: complited ? "500" : "400",
                marginRight: "10px",
              }}
            >
              {isLoading ? "–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ..." : "–ü–æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–º–µ—Ç–∫—É –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏"}
            </Typography>
          }
          labelPlacement="start"
        />

        {/* –°—Ç–∞—Ç—É—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è */}
        {complited && (
          <Typography
            sx={{
              cursor: "default",
              fontSize: "14px",
              color: "#fff",
              backgroundColor: "#4caf50",
              paddingX: "8px",
              paddingY: "2px",
              borderRadius: "4px",
              fontWeight: "500",
            }}
          >
            ‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ
          </Typography>
        )}

        {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å —Å –æ–ø–æ–∑–¥–∞–Ω–∏–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ */}
        {!complited && status === 3 && (
          <Typography
            sx={{
              cursor: "default",
              fontSize: "14px",
              color: "#172b4d",
              backgroundColor: "#ffd5d2",
              paddingX: "5px",
              borderRadius: "4px",
            }}
          >
            –í—ã–ø–æ–ª–Ω–µ–Ω–æ —Å –æ–ø–æ–∑–¥–∞–Ω–∏–µ–º
          </Typography>
        )}
      </Box>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π */}
      {complited && reminder_offset_minutes && reminder_offset_minutes !== -10 && (
        <Box
          sx={{
            marginTop: "10px",
            padding: "8px",
            backgroundColor: "#e8f5e8",
            borderRadius: "4px",
            fontSize: "12px",
            color: "#2e7d32",
            border: "1px solid #c8e6c9",
          }}
        >
          <div style={{ marginBottom: "4px" }}>
            üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏
          </div>
          <div style={{ fontSize: "11px", color: "#1b5e20" }}>
            –î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤–∫–ª—é—á–µ–Ω–∏—è —Å–Ω–∏–º–∏—Ç–µ –æ—Ç–º–µ—Ç–∫—É –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤
            –∫–∞–ª–µ–Ω–¥–∞—Ä–µ
          </div>
        </Box>
      )}

      {/* –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ —Å–Ω—è—Ç–∏–∏ –æ—Ç–º–µ—Ç–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è */}
      {!complited && reminder_offset_minutes === null && (
        <Box
          sx={{
            marginTop: "10px",
            padding: "8px",
            backgroundColor: "#fff3e0",
            borderRadius: "4px",
            fontSize: "12px",
            color: "#e65100",
            border: "1px solid #ffcc02",
          }}
        >
          üí° –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∏—Ö –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        </Box>
      )}
    </Box>
  );
}
