{"version":3,"file":"static/js/App.acabe814.chunk.js","mappings":"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","sources":["Components/NavBar/NavBar.jsx","App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n// import { NavLink } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n// import MUI components\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport { styled } from \"@mui/material/styles\";\nimport { purple } from \"@mui/material/colors\";\n\n//import states from Redux\nimport { userData } from \"../../Redux/auth/auth-slice\";\nimport { boardData } from \"../../Redux/board/board-slice\";\n\n// import static\nimport logo from \"../../static/images/logo-no-background.png\";\nimport {\n  useGetBoardsQuery,\n  useGetActiveBoardMutation,\n  // useGetBoardDetailQuery,\n} from \"../../Redux/board/board-operations\";\nimport { logOut } from \"../../Redux/auth/auth-operations\";\nimport { getActiveBoardId } from \"../../Redux/board/board-slice\";\n\n//import css\n// import classes from \"./NavBar.module.css\";\n\nconst LogOutButton = styled(Button)(({ theme }) => ({\n  height: \"50px\",\n  minWidth: \"96px\",\n  fontSize: \" 17px\",\n  lineHeight: \"1.5px\",\n  color: theme.palette.getContrastText(purple[500]),\n  backgroundColor: purple[500],\n  \"&:hover\": {\n    backgroundColor: purple[700],\n  },\n}));\n\nconst BoardSelect = styled(Select)(({ theme }) => ({\n  fieldset: {\n    borderColor: \"#fff\",\n  },\n  svg: { color: \"#fff\" },\n}));\n\nexport default function Navbar() {\n  const boardDataFromState = useSelector(boardData);\n  const id = boardDataFromState.id;\n  const [currentBoard, seCurrentBoard] = useState(id);\n\n  const userDataFromState = useSelector(userData);\n  const username = userDataFromState.user.name;\n  const isLoggedIn = userDataFromState.isLoggedIn;\n\n\n  const { data: boards } = useGetBoardsQuery();\n  const [updateBoardDetail] = useGetActiveBoardMutation();\n\n  const dispatch = useDispatch();\n\n  const getBoard = async (event) => {\n    try {\n      const tempCurrentBoard = event.target.value;\n\n      dispatch(getActiveBoardId(tempCurrentBoard))\n      seCurrentBoard(tempCurrentBoard);\n      await updateBoardDetail(tempCurrentBoard);\n\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        position: \"fixed\",\n        zIndex: \"999\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"nowrap\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"64px\",\n        backgroundColor: \"#2f2f2f\",\n      }}\n    >\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          width: \"164px\",\n          height: \"64px\",\n        }}\n      >\n        <img height={\"50px\"} srcSet={logo} src={logo} alt={\"logo\"} loading=\"lazy\" />\n      </Box>\n      {isLoggedIn && (\n        <>\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"flex-start\",\n              alignItems: \"center\",\n              marginLeft: \"100px\",\n              width: \"inherit\",\n            }}\n          >\n            <FormControl sx={{ color: \"#fff\", m: 1, width: 200 }} size=\"small\">\n              <InputLabel sx={{ color: \"#fff\" }} id=\"demo-simple-select-helper-label\">\n                Рабочая доска\n              </InputLabel>\n              <BoardSelect\n                defaultValue={''}\n                sx={{ color: \"#fff\" }}\n                labelId=\"board-simple-select-helper-label\"\n                id=\"board-simple-select-helper\"\n                value={currentBoard || \"\"}\n                label=\"Рабочая доска\"\n                onChange={getBoard}\n              >\n                {!!boards &&\n                  boards.map((board) => {\n                    const { id, name } = board;\n\n                    return (\n                      <MenuItem key={id} value={id}>\n                        {name}\n                      </MenuItem>\n                    );\n                  })}\n              </BoardSelect>\n            </FormControl>\n          </Box>\n          <Typography\n            sx={{\n              cursor: \"default\",\n              fontSize: \"20px\",\n              color: \"#fff\",\n              width: \"100px\",\n              padding: \"3px\",\n            }}\n          >\n            {username}\n          </Typography>\n          <LogOutButton onClick={() => dispatch(logOut())}>Выйти</LogOutButton>\n        </>\n      )}\n    </Box>\n  );\n}\n","import \"./App.css\";\nimport { useEffect } from \"react\";\n\nimport { LocalizationProvider } from \"@mui/x-date-pickers\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { Outlet } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n//import components\nimport Navbar from \"./Components/NavBar/NavBar\";\n\nimport { userData } from \"./Redux/auth/auth-slice\";\nimport { refreshUser } from \"./Redux/auth/auth-operations\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  const userDataFromState = useSelector(userData);\n  const accessToken = userDataFromState.accessToken;\n\n  useEffect(() => {\n    if (accessToken === null) {\n      return;\n    }\n    dispatch(refreshUser());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch]);\n\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <div className=\"App\">\n        <Navbar />\n        <Outlet />\n      </div>\n    </LocalizationProvider>\n  );\n}\n\nexport default App;\n"],"names":["LogOutButton","styled","Button","_ref","theme","height","minWidth","fontSize","lineHeight","color","palette","getContrastText","purple","backgroundColor","BoardSelect","Select","_ref2","fieldset","borderColor","svg","Navbar","id","useSelector","boardData","currentBoard","seCurrentBoard","useState","userDataFromState","userData","username","user","name","isLoggedIn","data","boards","useGetBoardsQuery","updateBoardDetail","useGetActiveBoardMutation","dispatch","useDispatch","_jsxs","Box","sx","position","zIndex","display","flexDirection","flexWrap","justifyContent","alignItems","width","children","_jsx","srcSet","logo","src","alt","loading","_Fragment","marginLeft","FormControl","m","size","InputLabel","defaultValue","labelId","value","label","onChange","async","tempCurrentBoard","event","target","getActiveBoardId","error","console","log","map","board","MenuItem","Typography","cursor","padding","onClick","logOut","accessToken","useEffect","refreshUser","LocalizationProvider","dateAdapter","AdapterDateFns","className","Outlet"],"sourceRoot":""}