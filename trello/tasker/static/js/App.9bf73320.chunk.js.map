{"version":3,"file":"static/js/App.9bf73320.chunk.js","mappings":"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","sources":["Components/NavBar/NavBar.jsx","Components/LoginForm.jsx","App.js"],"sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport routes from \"../../routes\";\nimport { useSelector } from \"react-redux\";\n\n// import MUI components\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport { styled } from \"@mui/material/styles\";\nimport { purple } from \"@mui/material/colors\";\n\n//import states from Redux\nimport { userData } from \"../../Redux/auth/auth-slice\";\n\n// import static\nimport logo from \"../../static/images/logo-no-background.png\";\n\n//import css\nimport classes from \"./NavBar.module.css\";\n\nconst LogInButton = styled(Button)(({ theme }) => ({\n  height: \"50px\",\n  fontSize: \" 17px\",\n  lineHeight: \"1.5px\",\n  color: theme.palette.getContrastText(purple[500]),\n  backgroundColor: purple[500],\n  \"&:hover\": {\n    backgroundColor: purple[700],\n  },\n}));\n\nexport default function Navbar() {\n  const userDataFromState = useSelector(userData);\n  const username = userDataFromState.user.name;\n  const isLoggedIn = userDataFromState.isLoggedIn;\n\n  return (\n    <Box\n      sx={{\n        position: \"fixed\",\n        zIndex: \"999\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"nowrap\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"64px\",\n        backgroundColor: \"#2f2f2f\",\n      }}\n    >\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          width: \"164px\",\n          height: \"64px\",\n        }}\n      >\n        <img height={\"50px\"} srcSet={logo} src={logo} alt={\"logo\"} loading=\"lazy\" />\n      </Box>\n      {isLoggedIn && (\n        <>\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"flex-start\",\n              alignItems: \"center\",\n              marginLeft: \"100px\",\n              width: \"inherit\",\n            }}\n          >\n            <NavLink\n              end\n              to={routes.board}\n              // className={({ isActive }) => (isActive ? classes.LinkItemActive : classes.LinkItem)}\n            >\n              <LogInButton disableRipple variant=\"contained\">\n                Рабочая доска\n              </LogInButton>\n            </NavLink>\n          </Box>\n          <Typography\n            sx={{\n              cursor: \"default\",\n              fontSize: \"20px\",\n              color: \"#fff\",\n              width: \"100px\",\n              padding: \"3px\",\n            }}\n          >\n            {username}\n          </Typography>{\" \"}\n        </>\n      )}\n    </Box>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n// import MUI components\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport Button from \"@mui/material/Button\";\n\n//import auth operations\nimport { logIn } from \"../Redux/auth/auth-operations\";\n\n//import states from Redux\nimport { userData } from \"../Redux/auth/auth-slice\";\n\nexport default function InputAdornments() {\n  const [showPassword, setShowPassword] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const loginSubmit = (event) => {\n    event.preventDefault();\n\n    dispatch(logIn({username, password}));\n  };\n\n  return (\n    <Box\n      sx={{\n        margin: 'auto',\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        padding: \"16px\",\n        flexDirection: \"row\",\n        height: \"150px\",\n        width: \"509px\",\n        backgroundColor: \"#fff\",\n        boxShadow: \"10\",\n      }}\n    >\n      <form onSubmit={loginSubmit}>\n        <div>\n        <FormControl sx={{ m: 1, width: \"25ch\" }} variant=\"outlined\">\n          <InputLabel htmlFor=\"outlined-adornment-login\">Login</InputLabel>\n          <OutlinedInput\n            id=\"outlined-adornment-login\"\n            label=\"Login\"\n            value={username}\n            onChange={(event) => {\n              setUsername(event.target.value);\n            }}\n          />\n        </FormControl>\n        <FormControl sx={{ m: 1, width: \"25ch\" }} variant=\"outlined\">\n          <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n          <OutlinedInput\n            value={password}\n            onChange={(event) => {\n              setPassword(event.target.value);\n            }}\n            id=\"outlined-adornment-password\"\n            type={showPassword ? \"text\" : \"password\"}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                  edge=\"end\"\n                >\n                  {showPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            }\n            label=\"Password\"\n          />\n        </FormControl>\n        </div>\n        <Button sx={{margin:\"8px\", width:\"461px\"}} fullWidth variant=\"contained\" type=\"submit\">\n          Войти\n        </Button>\n      </form>\n    </Box>\n  );\n}\n","import \"./App.css\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { Outlet } from \"react-router-dom\";\nimport Navbar from \"./Components/NavBar/NavBar\";\nimport LoginForm from \"./Components/LoginForm\";\n\nimport { useSelector } from \"react-redux\";\n\nimport { userData } from \"./Redux/auth/auth-slice\";\n\nfunction App() {\n  const userDataFromState = useSelector(userData);\n  const isLoggedIn = userDataFromState.isLoggedIn;\n\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <div className=\"App\">\n        <Navbar />\n        {isLoggedIn ? <Outlet /> : <LoginForm />}\n      </div>\n    </LocalizationProvider>\n  );\n}\n\nexport default App;\n"],"names":["LogInButton","styled","Button","_ref","theme","height","fontSize","lineHeight","color","palette","getContrastText","purple","backgroundColor","Navbar","userDataFromState","useSelector","userData","username","user","name","isLoggedIn","_jsxs","Box","sx","position","zIndex","display","flexDirection","flexWrap","justifyContent","alignItems","width","children","_jsx","srcSet","logo","src","alt","loading","_Fragment","marginLeft","NavLink","end","to","routes","board","disableRipple","variant","Typography","cursor","padding","InputAdornments","showPassword","setShowPassword","useState","setUsername","password","setPassword","dispatch","useDispatch","margin","boxShadow","onSubmit","event","preventDefault","logIn","FormControl","m","InputLabel","htmlFor","OutlinedInput","id","label","value","onChange","target","type","endAdornment","InputAdornment","IconButton","onClick","handleClickShowPassword","show","onMouseDown","edge","VisibilityOff","Visibility","fullWidth","LocalizationProvider","dateAdapter","AdapterDateFns","className","Outlet","LoginForm"],"sourceRoot":""}