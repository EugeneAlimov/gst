{"version":3,"file":"static/js/BoardView.626ee089.chunk.js","mappings":"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","sources":["Components/Card/CardImageSection/CardImage.jsx","Components/Card/CardDescriptionSection/CardDescription.jsx","Components/Card/CardStatisticIconsSection/CardCommentsIcon.jsx","Components/Card/CardStatisticIconsSection/TaskTerminIcon.jsx","Components/Card/CardStatisticIconsSection/CardCheckListIcon.jsx","Components/Card/CardStatisticIconsSection/CardDescriptionIcon.jsx","Components/Card/CardStatisticIconsSection/CardSubscribeIcon.jsx","Components/Card/CardStatisticIconsSection/CardStatistic.jsx","Components/Card/Avatar/UserAvatar.jsx","Components/Card/Avatar/CardAvatarSection.jsx","Components/Card/CardChipsSection/CardChip.jsx","constants/colorsConst.js","constants/chipContainerStyle.js","Components/Card/CardChipsSection/CardChipContainer.jsx","Components/Card/AllSettingsOfCard/styleConst.js","Components/Card/AllSettingsOfCard/Header.jsx","Components/Card/AllSettingsOfCard/constatns.js","Components/Card/AllSettingsOfCard/Usets.jsx","Components/Card/AllSettingsOfCard/Cheeps.jsx","Components/Card/AllSettingsOfCard/Actions.jsx","Components/UI/TextEditor.jsx","Components/Card/AllSettingsOfCard/Description.jsx","Components/Card/AllSettingsOfCard/methods.js","Components/Card/AllSettingsOfCard/Checklist.jsx","Components/Card/AllSettingsOfCard/AllSettingsOfCard.jsx","Components/ChangeChips/ChipContainer.jsx","Components/ChangeChips/ChangeChipsPallet.jsx","Components/Card/ChangeUsers/ChangeUsers.jsx","Components/DateAndTime/Calendar.jsx","Components/DateAndTime/Period.jsx","Components/DateAndTime/Reminder.jsx","Components/DateAndTime/DateAndTimeButtonsGroup.jsx","Components/DateAndTime/DatesAndTimePallet.jsx","Components/Card/EditButtonsGroup/EditButtonsGroup.jsx","Components/Card/TaskCard.jsx","Components/Column/Column.jsx","libs/useWindowDimentions.js","Views/BoardView.jsx"],"sourcesContent":["import React from \"react\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport img1 from \"../../../static/images/img1.png\";\n\nexport default function CardImage() {\n  return (\n    <CardMedia\n      sx={{ paddingBottom: \"4px\", zIndex: \"10\",}}\n      component=\"img\"\n      // image=\"https://slp-statics.astockcdn.net/static_assets/staging/24winter/home/curated-collections/card-2.jpg?width=580\"\n      image={img1}\n      alt=\"Paella dish\"\n    />\n  );\n}\n","import React from \"react\";\nimport Link from \"@mui/material/Link\";\nimport Typography from \"@mui/material/Typography\";\n\nconst preventDefault = (event) => event.preventDefault();\n\nexport default function CardDescription() {\n  return (\n    <Link href=\"#\" underline=\"none\" onClick={preventDefault} sx={{ marginBottom: \"6px\" }}>\n      <Typography\n        variant=\"caption\"\n        color=\"#172b4d\"\n        sx={{\n          width: \"100%\",\n          fontSize: \"14px\",\n          fontWeight: \"400\",\n          lineHeight: \"1.5\",\n        }}\n      >\n        This impressive paella is a perfect party dish and a fun meal to cook together with your\n        guests. Add 1 cup of frozen peas along with the mussels, if you like.\n      </Typography>\n    </Link>\n  );\n}\n","import React from \"react\";\n\nimport Box from \"@mui/material/Box\";\nimport Icon from \"@mui/material/Icon\";\nimport Typography from \"@mui/material/Typography\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\nimport TextsmsOutlinedIcon from \"@mui/icons-material/TextsmsOutlined\";\n\nexport default function CardCommentsIcon({ boxStyle, iconStyle, typographyStyle }) {\n  const extTypographyStyle = { ...typographyStyle };\n  return (\n    <Tooltip\n      title=\"Комментарии.\"\n      placement=\"bottom\"\n    >\n      <Box sx={boxStyle}>\n      <Typography\n          variant=\"caption\"\n          sx={{ lineHeight: \"1.3\", }}\n        >\n          <Icon>\n            <TextsmsOutlinedIcon sx={iconStyle} />\n          </Icon>\n        </Typography>\n        <Typography\n          variant=\"caption\"\n          color=\"#172b4d\"\n          sx={extTypographyStyle}\n        >\n          {2}\n        </Typography>\n      </Box>\n    </Tooltip>\n  );\n}\n","import React, { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Icon from \"@mui/material/Icon\";\nimport Typography from \"@mui/material/Typography\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport AccessTimeOutlinedIcon from \"@mui/icons-material/AccessTimeOutlined\";\n// import CircleOutlinedIcon from \"@mui/icons-material/CircleOutlined\";\n// import TaskAltOutlinedIcon from \"@mui/icons-material/TaskAltOutlined\";\nimport CancelOutlinedIcon from \"@mui/icons-material/CancelOutlined\";\n\nimport format from \"date-fns/format\";\n\nexport default function TaskTerminIcon({ boxStyle, iconStyle, typographyStyle }) {\n  const [inBlock, setInBlock] = useState(false);\n\n  const extBoxStyle = {\n    ...boxStyle,\n    paddingRight: \"6px\",\n    borderRadius: \"6px\",\n    backgroundColor: \"#ffd5d2\",\n    \"&:hover\": {\n      backgroundColor: \"#e7c8c6\",\n    },\n  };\n\n  const extIconStyle = { ...iconStyle, color: \"#953827\", };\n  const extTypographyStyle = { ...typographyStyle, color: \"#953827\" };\n\n  // const timeFormated = format(timeOfStartTask, \"d,MMM\");\n  // const timeFormatedLetght = timeFormated.length;\n  // const dateStart = timeFormated.slice(0, timeFormatedLetght - 6);\n\n  return (\n    <Tooltip title=\"Задание просрочено.\" placement=\"bottom\">\n      <Box\n        sx={{\n          ...extBoxStyle,\n          \n        }}\n        onMouseOver={() => setInBlock(true)}\n        onMouseOut={() => setInBlock(false)}\n      >\n        <Typography variant=\"caption\" sx={{ lineHeight: \"1.3\" }}>\n          <Icon sx={{ marginRight: \"3px\" }}>\n            {inBlock ? (\n              <CancelOutlinedIcon sx={extIconStyle} />\n            ) : (\n              <AccessTimeOutlinedIcon sx={extIconStyle} />\n            )}\n          </Icon>\n        </Typography>\n        <Typography variant=\"caption\" color=\"#172b4d\" sx={extTypographyStyle}>\n          {/* {dateStart} - {dateStart} */ \"15 янв - 20 февр\"}\n        </Typography>\n      </Box>\n    </Tooltip>\n  );\n}\n","import React, { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Icon from \"@mui/material/Icon\";\nimport Typography from \"@mui/material/Typography\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\nimport CheckBoxOutlineBlankOutlinedIcon from \"@mui/icons-material/CheckBoxOutlineBlankOutlined\";\nimport CheckBoxOutlinedIcon from \"@mui/icons-material/CheckBoxOutlined\";\n\nexport default function CardCheckListIcon({ boxStyle, iconStyle, typographyStyle }) {\n  return (\n    <Tooltip\n      title=\"Элементы чек-листа.\"\n      placement=\"bottom\"\n    >\n      <Box sx={boxStyle}>\n      <Typography\n          variant=\"caption\"\n          sx={{ lineHeight: \"1.3\", }}\n        >\n          <Icon>\n            <CheckBoxOutlinedIcon sx={iconStyle} />\n          </Icon>\n        </Typography>\n        <Typography\n          variant=\"caption\"\n          color=\"#172b4d\"\n          sx={typographyStyle}\n        >\n          {3}/{7}\n        </Typography>\n      </Box>\n    </Tooltip>\n  );\n}\n","import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Icon from \"@mui/material/Icon\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Typography from \"@mui/material/Typography\";\n\nimport SubjectOutlinedIcon from \"@mui/icons-material/SubjectOutlined\";\n\nexport default function CardDescriptionIcon({ boxStyle, iconStyle, typographyStyle }) {\n  return (\n    <Box sx={boxStyle}>\n      <Tooltip\n        title=\"Эта карточка с описанием.\"\n        placement=\"bottom\"\n      >\n        <Typography sx={{ lineHeight: \"1.4\" }}>\n          <Icon>\n            <SubjectOutlinedIcon sx={iconStyle} />\n          </Icon>\n        </Typography>\n      </Tooltip>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Icon from \"@mui/material/Icon\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Typography from \"@mui/material/Typography\";\n\nimport VisibilityOutlinedIcon from \"@mui/icons-material/VisibilityOutlined\";\n\nexport default function CardSubscribeIcon({ boxStyle, iconStyle }) {\n  return (\n    <Tooltip\n      title=\"Вы подписаны на эту катрочку.\"\n      placement=\"bottom\"\n    >\n      <Box sx={boxStyle}>\n      <Typography\n          sx={{ lineHeight: \"1.4\" }}\n        >\n          <Icon>\n            <VisibilityOutlinedIcon sx={iconStyle} />\n          </Icon>\n        </Typography>\n      </Box>\n    </Tooltip>\n  );\n}\n","import React from \"react\";\nimport Box from \"@mui/material/Box\";\n\nimport CardCommentsIcon from \"./CardCommentsIcon\";\nimport TaskTerminIcon from \"./TaskTerminIcon\";\nimport CardCheckListIcon from \"./CardCheckListIcon\";\nimport CardDescriptionIcon from \"./CardDescriptionIcon\";\nimport CardSubscribeIcon from \"./CardSubscribeIcon\";\n\nconst containerStyle = {\n  display: \"flex\",\n  flexWrap: \"wrap\",\n  width: \"100%\",\n  paddingBottom: \"6px\"\n  }\n  \nconst boxStyle = {\n  minWidth: \"20px\",\n  height: \"20px\",\n  display: \"flex\",\n  alignItems: \"center\",\n  aligneContent: \"center\",\n  justifyContent: \"space-between\",\n  marginRight: \"6px\",\n  marginBottom: \"6px\",\n};\n\nconst typographyStyle = {\n  verticalAligne: \"top\",\n  overflow: \"visible\",\n  fontSize: \"12px\",\n  fontWeight: \"400\",\n  lineHeight: \"1.4\",\n};\n\nconst iconStyle = {\n  overflow: \"visible\",\n  fontSize: \"18px\",\n};\n\nexport default function CardStatistic() {\n  return (\n    <Box sx={containerStyle}\n    >\n      <CardSubscribeIcon\n        boxStyle={boxStyle}\n        iconStyle={iconStyle}\n      />\n      <TaskTerminIcon\n        boxStyle={boxStyle}\n        iconStyle={iconStyle}\n        typographyStyle={typographyStyle}\n      />\n      <CardDescriptionIcon\n        boxStyle={boxStyle}\n        iconStyle={iconStyle}\n        typographyStyle={typographyStyle}\n      />\n      <CardCommentsIcon\n        boxStyle={boxStyle}\n        iconStyle={iconStyle}\n        typographyStyle={typographyStyle}\n      />\n      <CardCheckListIcon\n        boxStyle={boxStyle}\n        iconStyle={iconStyle}\n        typographyStyle={typographyStyle}\n      />\n    </Box>\n  );\n}\n","import React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport red from \"@mui/material/colors/red\";\n\nconst avatarPictStyle = {\n  width: \"28px\",\n  height: \"28px\",\n  marginRight: \"0px\",\n  bgcolor: red[500],\n  transition: \"all .2s ease-in-out\",\n  \"&:hover\": {\n    transform: \"scale(1.5)\",\n  },\n};\n\nexport default function UserAvatar({ userName }) {\n  return (\n    <Avatar sx={avatarPictStyle} aria-label={`${userName}-avatar-label`}>\n      {userName}\n    </Avatar>\n  );\n}\n","import React from \"react\";\nimport AvatarGroup from \"@mui/material/AvatarGroup\";\nimport UserAvatar from \"./UserAvatar\";\n\nconst userNameArr = [\"R\", \"B\", \"C\", \"T\", \"K\", \"S\", \"O\", \"W\", \"M\", \"X\", \"P\"];\nexport default function CardAvatarSection() {\n  return (\n    <AvatarGroup max={9}>\n      {userNameArr.map((userName) => {\n        return <UserAvatar key={userName} userName={userName} />;\n      })}\n    </AvatarGroup>\n  );\n}\n","import React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\n\r\nexport default function CardChip({ chipText, color, chipStyle }) {\r\n  const boxStyle = { ...chipStyle.boxStyle, backgroundColor: color.normal };\r\n  return (\r\n    <Tooltip\r\n      title={\r\n        <Typography\r\n          sx={{ ...chipStyle.typographyStyle, color: \"#fff\", width: \"300px\" }}\r\n          paragraph={true}\r\n        >\r\n          Цвет: {color.colorName}\r\n          <br />\r\n          Здесь будет полное содержимое метки, даже в случае если она не помещается в контейнер\r\n          метки\r\n        </Typography>\r\n      }\r\n      followCursor\r\n      placement=\"bottom\"\r\n    >\r\n      <Box\r\n        sx={{\r\n          ...boxStyle,\r\n          \"&:hover\": {\r\n            backgroundColor: color.hover,\r\n            transform: \"scale(1.005)\",\r\n          },\r\n        }}\r\n      >\r\n        <Typography noWrap sx={{...chipStyle.typographyStyle,}} variant=\"body1\">\r\n          {chipText}\r\n        </Typography>\r\n      </Box>\r\n    </Tooltip>\r\n  );\r\n}\r\n","export const chipColor = [\n  { normal: \"#baf3db\", hover: \"#7ee2b8\", colorNumber: \"1\", colorName: \"Приглушенный зеленый\" },\n  { normal: \"#f8e6a0\", hover: \"#f5cd47\", colorNumber: \"2\", colorName: \"Приглушенный желтый\" },\n  { normal: \"#fedec8\", hover: \"#fec195\", colorNumber: \"3\", colorName: \"Приглушенный оранжевый\" },\n  { normal: \"#ffd5d2\", hover: \"#fd9891\", colorNumber: \"4\", colorName: \"Приглушенный красный\" },\n  { normal: \"#dfd8fd\", hover: \"#b8acf6\", colorNumber: \"5\", colorName: \"Приглушенный фиолетовый\" },\n  { normal: \"#4bce97\", hover: \"#7ee2b8\", colorNumber: \"6\", colorName: \"Зелёный\" },\n  { normal: \"#f5cd47\", hover: \"#e2b203\", colorNumber: \"7\", colorName: \"Желтый\" },\n  { normal: \"#fea362\", hover: \"#fec195\", colorNumber: \"8\", colorName: \"Оранжевый\" },\n  { normal: \"#f87168\", hover: \"#fd9891\", colorNumber: \"9\", colorName: \"Красный\" },\n  { normal: \"#9f8fef\", hover: \"#b8acf6\", colorNumber: \"10\", colorName: \"Пурпурный\" },\n  { normal: \"#1f845a\", hover: \"#216e4e\", colorNumber: \"11\", colorName: \"Насыщенный зеленый\" },\n  { normal: \"#946f00\", hover: \"#7f5f01\", colorNumber: \"12\", colorName: \"Насыщенный желтый\" },\n  { normal: \"#c25100\", hover: \"#a54800\", colorNumber: \"13\", colorName: \"Насыщенный оранжевый\" },\n  { normal: \"#c9372c\", hover: \"#ae2e24\", colorNumber: \"14\", colorName: \"Красный\" },\n  { normal: \"#6e5dc6\", hover: \"#5e4db2\", colorNumber: \"15\", colorName: \"Пурпурный\" },\n  { normal: \"#cce0ff\", hover: \"#85b8ff\", colorNumber: \"16\", colorName: \"Приглушенный синий\" },\n  { normal: \"#c6edfb\", hover: \"#9dd9ee\", colorNumber: \"17\", colorName: \"Приглушенный голубой\" },\n  { normal: \"#d3f1a7\", hover: \"#b3df72\", colorNumber: \"18\", colorName: \"Приглушенный лаймовый\" },\n  { normal: \"#fdd0ec\", hover: \"#f797d2\", colorNumber: \"19\", colorName: \"Приглушенный розовый\" },\n  { normal: \"#dcdfe4\", hover: \"#85b8ff\", colorNumber: \"20\", colorName: \"Светло-серый\" },\n  { normal: \"#579dff\", hover: \"#9dd9ee\", colorNumber: \"21\", colorName: \"Синий\" },\n  { normal: \"#6cc3e0\", hover: \"#94c748\", colorNumber: \"22\", colorName: \"Небесный\" },\n  { normal: \"#94c748\", hover: \"#b3b9c4\", colorNumber: \"23\", colorName: \"Лаймовый\" },\n  { normal: \"#e774bb\", hover: \"#f797d2\", colorNumber: \"24\", colorName: \"Розовый\" },\n  { normal: \"#8590a2\", hover: \"#b3b9c4\", colorNumber: \"25\", colorName: \"Черный\" },\n  { normal: \"#0c66e4\", hover: \"#0055cc\", colorNumber: \"26\", colorName: \"Насыщенный синий\" },\n  { normal: \"#227d9b\", hover: \"#206a83\", colorNumber: \"27\", colorName: \"Насыщенный голубой\" },\n  { normal: \"#5b7f24\", hover: \"#4c6b1f\", colorNumber: \"28\", colorName: \"Насыщенный лаймовый\" },\n  { normal: \"#ae4787\", hover: \"#943d73\", colorNumber: \"29\", colorName: \"Насыщенный розовый\" },\n  { normal: \"#626f86\", hover: \"#44546f\", colorNumber: \"30\", colorName: \"Темно-серый\" },\n];\n","export const boxStylehipContainer = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  alignItems: \"center\",\n  height: \"30px\",\n  marginBottom: \"7px\",\n};\n\nexport const chipStyleChipContainer = {\n  boxStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    alignContent: \"center\",\n    width: \"212px\",\n    height: \"32px\",\n    borderRadius: \"4px\",\n    transition: \"all .05s ease-in-out\",\n  },\n  typographyStyle: {\n    marginX: \"6px\",\n    fontSize: \"14px\",\n    fontWeight: \"400\",\n    color: \"#000\",\n  },\n};\n\nexport const boxStyleardChipContainer = {\n  display: \"flex\",\n  flexWrap: \"wrap\",\n  minHeight: \"24px\",\n  maxWidth: \"100%\",\n  paddingBottom: \"6px\",\n};\n\nexport const chipStyleCardChipContainer = {\n  boxStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    alignContent: \"center\",\n    minWidth: \"56px\",\n    marginRight: \"4px\",\n    marginBottom: \"5px\",\n    height: \"16px\",\n    borderRadius: \"4px\",\n    backgroundColor: \"#4bce97\",\n    transition: \"all .05s ease-in-out\",\n  },\n  typographyStyle: {\n    marginX: \"6px\",\n    fontSize: \"12px\",\n    fontWeight: \"400\",\n    color: \"#164b35\",\n  },\n};\n\nexport const chipStyleCreateNewChip = {\n  boxStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    alignContent: \"center\",\n    width: \"48px\",\n    height: \"32px\",\n    margin: \"2px\",\n    borderRadius: \"4px\",\n    transition: \"all .05s ease-in-out\",\n  },\n  typographyStyle: {\n    marginX: \"6px\",\n    fontSize: \"14px\",\n    fontWeight: \"400\",\n    color: \"#000\",\n  },\n};\n","import React from \"react\";\nimport Box from \"@mui/material/Box\";\n\nimport CardChip from \"./CardChip\";\n\nimport { chipColor } from \"../../../constants/colorsConst\";\nimport {\n  boxStyleardChipContainer,\n  chipStyleCardChipContainer,\n} from \"../../../constants/chipContainerStyle\";\n\nexport default function CardChipContainer() {\n  return (\n    <Box sx={boxStyleardChipContainer}>\n      {[\n        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\n        // 15, 16, 17, 18, 19, 20, 21,\n        // 22, 23, 24, 25, 26, 27, 28, 29,\n      ].map((value) => {\n        const labelId = `checkbox-list-label-${value}`;\n\n        return (\n          <CardChip\n            key={value}\n            color={chipColor[value]}\n            labelId={labelId}\n            chipStyle={chipStyleCardChipContainer}\n          />\n        );\n      })}\n    </Box>\n  );\n}\n","import { styled } from \"@mui/system\";\nimport { TextareaAutosize as BaseTextareaAutosize } from \"@mui/base/TextareaAutosize\";\n\nexport const TextareaCardName = styled(BaseTextareaAutosize)(\n  () => `\n    box-sizing: border-box;\n    width: 95%;\n    height: fit-content;\n    font-family: 'Roboto';\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 1.5;\n    padding: 0px 6px;\n    border-radius: 4px;\n    color: #172b4d;\n    background-color: #f5f5f5;\n  \n    border: 0px;\n    resize: none;\n    &:hover {\n      border-color: #3399FF;\n    }\n    \n   &:focus {\n      background: #fff;\n      outline: 0;\n      border-color: #3399FF;\n      box-shadow: 0 0 0 3px #b6daff;\n    }\n  \n    // firefox\n    &:focus-visible {\n      outline: 0;\n    }\n  `\n);\n\nexport const TextareaChkListText = styled(BaseTextareaAutosize)(\n  () => `\n    box-sizing: border-box;\n    width: 100%;\n    height: fit-content;\n    font-family: 'Roboto';\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 1.5;\n    padding: 0px 6px;\n    border-radius: 4px;\n    color: #172b4d;\n    background-color: #f5f5f5;\n  \n    border: 0px;\n    resize: none;\n    &:hover {\n      border-color: #3399FF;\n    }\n    \n      background: #fff;\n      outline: 0;\n      border-color: #3399FF;\n      box-shadow: 0 0 0 3px #b6daff;\n    }\n  \n      outline: 0;\n  `\n);\n\nexport const boxStyle = {\n  minWidth: \"20px\",\n  height: \"20px\",\n  display: \"flex\",\n  alignItems: \"center\",\n  aligneContent: \"center\",\n  justifyContent: \"space-between\",\n};\n\nexport const typographyStyle = {\n  verticalAligne: \"top\",\n  overflow: \"visible\",\n  fontSize: \"12px\",\n  fontWeight: \"400\",\n  lineHeight: \"1.4\",\n};\n\nexport const iconStyle = {\n  overflow: \"visible\",\n  fontSize: \"18px\",\n};\n\nexport const mainContainer = {\n  display: \"block\",\n  position: \"relative\",\n  width: \"768px\",\n  // borderRadius: \"20px\",\n  margin: \"0px\",\n  backgroundColor: \"#f5f5f5\",\n  // boxShadow: \"1\",\n  // marginY: \"20px\",\n  paddingRight:\"8px\",\n};\n\nexport const cardMedia = {\n  // maxHeight: \"120px\",\n  marginBottom: \"10px\",\n  // borderTopRightRadius: \"10px\",\n  // borderTopLeftRadius: \"10px\",\n};\nexport const typographyCardName = {\n  cursor: \"default\",\n  fontSize: \"20px\",\n  fontWeight: \"400\",\n  color: \"#172b4d\",\n  width: \"100%\",\n  padding: \"3px\",\n};\n\nexport const typographyOnTheColumn = {\n  marginTop: \"12px\",\n  cursor: \"default\",\n  fontSize: \"20px\",\n  color: \"#172b4d\",\n};\n\nexport const icon = {\n  marginTop: \"0px\",\n  position: \"absolute\",\n  left: \"20px\",\n};\n\nexport const linkOnTheColumn = {\n  textDecoration: \"underline\",\n  textDecorationColor: \"#172b4d\",\n  fontSize: \"16px\",\n  fontWeight: \"400\",\n  color: \"#172b4d\",\n  role: \"button\",\n  cursor: \"pointer\",\n};\n\nexport const basicOperationsWithCard = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  flexWrap: \"nowrap\",\n  alignItems: \"flex-start\",\n  width: \"478px\",\n};\n\nexport const avatarBox = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  alignItems: \"center\",\n  justifyContent: \"flex-start\",\n  width: \"100%\",\n};\n\nexport const cheepsBox = {\n  marginBottom: \"15px\",\n  width: \"478px\", //\"100%\",\n  backgroundColor: \"#e1e1e14f\",\n  borderRadius: \"4px\",\n  boxShadow: \"1\",\n  padding: \"5px\",\n};\n\nexport const text = {\n  cursor: \"default\",\n  fontSize: \"20px\",\n  color: \"#172b4d\",\n  width: \"100%\",\n  padding: \"3px\",\n};\n\nexport const addIconButton = {\n  margin: \"2px\",\n  width: \"48px\",\n  height: \"32px\",\n  borderRadius: \"4px\",\n  transition: \"all .05s ease-in-out\",\n  backgroundColor: \"#c1c1c18a\",\n  \"&:hover\": {\n    backgroundColor: \"#9b99998a\",\n    transform: \"scale(1.005)\",\n  },\n};\n\nexport const cardActionsMainContainer = {\n  marginBottom: \"15px\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  flexWrap: \"nowrap\",\n  width: \"350px\",\n  backgroundColor: \"#f5f5f5\",\n  borderRadius: \"4px\",\n  padding: \"5px\",\n};\n\nexport const cardActionsContainer = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"flex-start\",\n  width: \"100%\",\n  marginBottom: \"15px\",\n  borderRadius: \"3px\",\n  paddingX: \"10px\",\n  paddingBottom: \"10px\",\n  boxShadow: \"1\",\n};\n\nexport const cardSubscrContainer = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  alignItems: \"center\",\n  justifyContent: \"flex-start\",\n  width: \"100%\",\n  borderRadius: \"3px\",\n};\n\nexport const cardComplContainer = {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    width: \"100%\",\n    borderRadius: \"3px\",\n    paddingX: \"10px\",\n    paddingBottom: \"10px\",\n    boxShadow: \"1\",\n}","import React, {useState} from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Link from \"@mui/material/Link\";\nimport Icon from \"@mui/material/Icon\";\n\nimport ArticleOutlinedIcon from \"@mui/icons-material/ArticleOutlined\";\n\nimport * as Style from \"./styleConst\";\n\nimport { TextareaCardName } from \"./styleConst\";\n\n\nexport default function Header() {\n    const [textAreaText, setTextAreaText] = useState(\"\");\n\n  return (\n    <>\n      <Typography sx={Style.typographyCardName}>Название карточки</Typography>\n      <Icon sx={Style.icon}>\n        <ArticleOutlinedIcon />\n      </Icon>\n      <TextareaCardName\n        disabled={false}\n        aria-label=\"empty textarea\"\n        placeholder=\"Здесь нужно указать имя карточки\"\n        value={textAreaText}\n        onChange={(event) => {\n          setTextAreaText(event.target.value);\n        }}\n      />\n      <Typography sx={Style.typographyOnTheColumn}>\n        В колонке:{\" \"}\n        <Link href=\"#\" sx={Style.linkOnTheColumn}>\n          В работе\n        </Link>\n      </Typography>\n    </>\n  );\n}\n","export const userNameArr = [\n  \"R\",\n  \"B\",\n  \"C\",\n  \"T\",\n  \"K\",\n  \"S\",\n  \"O\",\n  \"W\",\n  \"M\",\n  \"X\",\n  \"P\",\n  \"A\",\n  \"G\",\n  \"Z\",\n  \"Y\",\n  \"D\",\n  \"V\",\n  \"N\",\n  \"F\",\n  \"B\",\n  \"Й\",\n  \"У\",\n];\n\nexport const checkListArr = [\n  {\n    id: 1,\n    isChecked: false,\n    text: \"\",\n    isSelected: false,\n  },\n  // {\n  //   id: 4,\n  //   isChecked: false,\n  //   text: \"\",\n  //   isSelected: false,\n  // },\n  // {\n  //   id: 5,\n  //   isChecked: false,\n  //   text: \"\",\n  //   isSelected: false,\n  // },\n];\n","import React from \"react\";\n\n//import MUI components\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport AvatarGroup from \"@mui/material/AvatarGroup\";\nimport IconButton from \"@mui/material/IconButton\";\n\n//import application components\nimport UserAvatar from \"../Avatar/UserAvatar\";\n\n//import constants\nimport { userNameArr } from \"./constatns\";\n\n//import MUI icons\nimport GroupAddOutlinedIcon from \"@mui/icons-material/GroupAddOutlined\";\n\n//import styles\nimport * as Style from \"./styleConst\";\n\nexport default function Users() {\n  return (\n    <Box sx={{ marginBottom: \"15px\" }}>\n      <Typography sx={{ cursor: \"default\", fontSize: \"20px\", color: \"#172b4d\", width: \"100%\" }}>\n        Участники\n      </Typography>\n      <Box sx={Style.avatarBox}>\n        <AvatarGroup max={15}>\n          {userNameArr.map((userName) => {\n            return <UserAvatar key={userName} userName={userName} />;\n          })}\n        </AvatarGroup>\n        <IconButton>\n          <GroupAddOutlinedIcon />\n        </IconButton>\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\n\n//import MUI components\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\n\n//import application components\nimport CardChip from \"../CardChipsSection/CardChip\";\n\n//import MUI icons\nimport AddOutlinedIcon from \"@mui/icons-material/AddOutlined\";\n\n//import styles\nimport * as Style from \"./styleConst\";\nimport { chipColor } from \"../../../constants/colorsConst\";\nimport { chipStyleCreateNewChip } from \"../../../constants/chipContainerStyle\";\n\nexport default function Cheeps() {\n  return (\n    <Box sx={Style.cheepsBox}>\n      <Typography sx={Style.text}>Метки</Typography>\n      <Box sx={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\" }}>\n        {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17].map((index) => {\n          const labelId = `checkbox-list-label-${index}`;\n          return (\n            <CardChip\n              key={index}\n              color={chipColor[index]}\n              labelId={labelId}\n              chipStyle={chipStyleCreateNewChip}\n            />\n          );\n        })}\n        <IconButton size=\"small\" sx={Style.addIconButton}>\n          <AddOutlinedIcon />\n        </IconButton>\n      </Box>\n    </Box>\n  );\n}\n","import React, {useState} from \"react\";\n\n//import MUI components\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Divider from \"@mui/material/Divider\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Switch from \"@mui/material/Switch\";\n\n//import application components\nimport TaskTerminIcon from \"../CardStatisticIconsSection/TaskTerminIcon\";\n\n//import styles\nimport * as Style from \"./styleConst\";\n\nexport default function Actions() {\n    const [complited, setComplited] = useState(false);\n    const [subscribed, setSubscribed] = useState(false);\n  \n    const handleComplitedChange = (event) => {\n        setComplited(event.target.checked);\n      };\n    \n      const handleSubscribeChange = (event) => {\n        setSubscribed(event.target.checked);\n      };\n    \n    return(\n        <Box sx={Style.cardActionsMainContainer}>\n        <Typography sx={Style.text}>Действия с карточкой:</Typography>\n        <Box sx={Style.cardActionsContainer}>\n          <Box sx={Style.cardSubscrContainer}>\n            <FormControlLabel\n              sx={{ marginX: \"0px\", width: \"284px\", justifyContent: \"space-between\" }}\n              value=\"top\"\n              control={\n                <Switch\n                  checked={subscribed}\n                  onChange={handleSubscribeChange}\n                  inputProps={{ \"aria-label\": \"controlled\" }}\n                />\n              }\n              label={\n                <Typography\n                  sx={{ cursor: \"pointer\", fontSize: \"14px\", color: \"#172b4d\" }}\n                >\n                  Подписаться на уведомления\n                </Typography>\n              }\n              labelPlacement=\"start\"\n            />\n          </Box>\n          <Box sx={Style.cardSubscrContainer}>\n            <Typography\n              sx={{\n                cursor: \"default\",\n                fontSize: \"14px\",\n                color: \"#172b4d\",\n                marginRight: \"10px\",\n              }}\n            >\n              Статус задания:\n            </Typography>\n            <TaskTerminIcon\n              boxStyle={Style.boxStyle}\n              iconStyle={Style.iconStyle}\n              typographyStyle={Style.typographyStyle}\n            />\n          </Box>\n        </Box>\n        <Divider\n          orientation=\"horizontal\"\n          variant=\"middle\"\n          sx={{ marginBottom: \"15px\" }}\n        />\n        <Box sx={Style.cardComplContainer}>\n          <FormControlLabel\n            sx={{ marginX: \"0px\", width: \"284px\", justifyContent: \"space-between\" }}\n            value=\"top\"\n            control={\n              <Checkbox\n                checked={complited}\n                onChange={handleComplitedChange}\n                inputProps={{ \"aria-label\": \"controlled\" }}\n              />\n            }\n            label={\n              <Typography\n                sx={{\n                  cursor: \"pointer\",\n                  fontSize: \"14px\",\n                  color: \"#172b4d\",\n                  marginRight: \"10px\",\n                }}\n              >\n                Поставить отметку о выполнении\n              </Typography>\n            }\n            labelPlacement=\"start\"\n          />\n          <Typography\n            sx={{\n              cursor: \"default\",\n              fontSize: \"14px\",\n              color: \"#172b4d\",\n              backgroundColor: \"#ffd5d2\",\n              paddingX: \"5px\",\n              borderRadius: \"4px\",\n            }}\n          >\n            Выполнено с опозданием\n          </Typography>\n        </Box>\n      </Box>\n\n    )\n}","import React from \"react\";\nimport \"quill/dist/quill.snow.css\";\nimport ReactQuill from \"react-quill\";\nimport { Box } from \"@mui/material\";\n\nexport default function TextEditor() {\n  var modules = {\n    toolbar: [\n      [{ size: [\"small\", false, \"large\", \"huge\"] }],\n      [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\n      [{ list: \"ordered\" }, { list: \"bullet\" }],\n      [\"link\", \"image\"],\n      [{ list: \"ordered\" }, { list: \"bullet\" }, { indent: \"-1\" }, { indent: \"+1\" }, { align: [] }],\n      [\n        {\n          color: [\n            \"#000000\",\n            \"#e60000\",\n            \"#ff9900\",\n            \"#ffff00\",\n            \"#008a00\",\n            \"#0066cc\",\n            \"#9933ff\",\n            \"#ffffff\",\n            \"#facccc\",\n            \"#ffebcc\",\n            \"#ffffcc\",\n            \"#cce8cc\",\n            \"#cce0f5\",\n            \"#ebd6ff\",\n            \"#bbbbbb\",\n            \"#f06666\",\n            \"#ffc266\",\n            \"#ffff66\",\n            \"#66b966\",\n            \"#66a3e0\",\n            \"#c285ff\",\n            \"#888888\",\n            \"#a10000\",\n            \"#b26b00\",\n            \"#b2b200\",\n            \"#006100\",\n            \"#0047b2\",\n            \"#6b24b2\",\n            \"#444444\",\n            \"#5c0000\",\n            \"#663d00\",\n            \"#666600\",\n            \"#003700\",\n            \"#002966\",\n            \"#3d1466\",\n            \"custom-color\",\n          ],\n        },\n      ],\n    ],\n  };\n\n  var formats = [\n    \"header\",\n    \"height\",\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"strike\",\n    \"blockquote\",\n    \"list\",\n    \"color\",\n    \"bullet\",\n    \"indent\",\n    \"link\",\n    \"image\",\n    \"align\",\n    \"size\",\n  ];\n\n  const handleProcedureContentChange = (content) => {\n    console.log(\"content---->\", content);\n  };\n\n  return (\n    <Box\n      sx={{\n        borderRadius: \"4px\",\n        boxShadow: \"1\",\n      }}\n    >\n      <div style={{ display: \"grid\", justifyContent: \"center\" }}>\n        <ReactQuill\n          theme=\"snow\"\n          modules={modules}\n          formats={formats}\n          placeholder=\"write your content ....\"\n          onChange={handleProcedureContentChange}\n          style={{ height: \"fit-content\" }}\n        ></ReactQuill>\n      </div>\n    </Box>\n  );\n}\n","import React from \"react\";\n\n//import MUI components\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\n\n//import application components\nimport TextEditor from \"../../UI/TextEditor\";\n\nexport default function Description() {\n  return (\n    <Box\n      sx={{\n        marginBottom: \"15px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        flexWrap: \"nowrap\",\n        width: \"100%\",\n        backgroundColor: \"#f5f5f5\",\n        borderRadius: \"4px\",\n        padding: \"5px\",\n      }}\n    >\n      <Typography\n        sx={{\n          cursor: \"default\",\n          fontSize: \"20px\",\n          color: \"#172b4d\",\n          width: \"100%\",\n          padding: \"3px\",\n          marginTop: \"15px\",\n        }}\n      >\n        Описание карточки\n      </Typography>\n      <TextEditor />\n    </Box>\n  );\n}\n","export function checkedRowsCounter(checkListItems, setProgress) {\n  const newCheckListItems = [...checkListItems];\n  let checked = 0;\n\n  newCheckListItems.forEach((element) => {\n    if (element.isChecked) {\n      checked += 1;\n    }\n  });\n\n  let length = checkListItems.length;\n  let progress = Math.round((100 / length) * checked);\n\n  if (!!!length) {\n    progress = 0;\n  }\n\n  setProgress(progress);\n}\n\nexport const ChkListCboxToggle =\n  (CheckboxID, checkListItems, setProgress, setCheckListItems) => () => {\n    const newCheckListItems = [...checkListItems];\n\n    newCheckListItems.forEach((element) => {\n      if (element.id === CheckboxID) {\n        element.isChecked = !element.isChecked;\n      }\n    });\n\n    checkedRowsCounter(checkListItems, setProgress, CheckboxID);\n    setCheckListItems(checkListItems);\n  };\n\nexport const ChkListTextEditToggle =\n  (\n    CheckboxID,\n    type,\n    IDofTheLastCreatedCheckListRow,\n    addNewRowToCheckListTrig,\n    checkListItems,\n    setCheckListItemText,\n    checkListItemText,\n    setCheckListItems,\n    setAddNewRowToCheckListTrig\n  ) =>\n  () => {\n    let newCheckListItems = [...checkListItems];\n    let isCancel = false;\n\n    newCheckListItems.forEach((element) => {\n      switch (type) {\n        case \"open\":\n          element.isSelected = false;\n          if (element.id === CheckboxID) {\n            element.isSelected = true;\n          }\n          break;\n\n        case \"cancel\":\n          element.isSelected = false;\n          isCancel = true;\n          setAddNewRowToCheckListTrig(false);\n\n          break;\n\n        case \"save\":\n          if (checkListItemText.length > 0) {\n            element.isSelected = false;\n\n            if (element.id === CheckboxID) {\n              element.text = checkListItemText;\n            }\n            setCheckListItemText(\"\");\n\n            if (addNewRowToCheckListTrig) {\n              setAddNewRowToCheckListTrig(false);\n            }\n          }\n          setCheckListItemText(\"\");\n\n          break;\n\n        default:\n          break;\n      }\n    });\n\n    if (isCancel) {\n      const newArr = checkListItems.filter((el) => el.id !== IDofTheLastCreatedCheckListRow);\n      newCheckListItems = [...newArr];\n      setCheckListItemText(\"\");\n    }\n    isCancel = false;\n\n    setCheckListItems(newCheckListItems);\n  };\n\nexport const HandleRemoveRowFromCheckList = (CheckboxID, checkListItems, setCheckListItems) => {\n  const newCheckListItems = checkListItems.filter((el) => el.id !== CheckboxID);\n\n  setCheckListItems(newCheckListItems);\n};\n\nexport const HandleAddNewRowToCheckList = (\n  setIDofTheLastCreatedCheckListRow,\n  setAddNewRowToCheckListTrig,\n  setCheckListItems,\n  checkListItems\n) => {\n  const checkListArrLength = checkListItems.length;\n  const IDofTheLastCreatedCheckListRow = checkListArrLength + 1;\n\n  const newRowObj = {\n    id: IDofTheLastCreatedCheckListRow,\n    isChecked: false,\n    text: \"\",\n    isSelected: true,\n  };\n\n  setIDofTheLastCreatedCheckListRow(IDofTheLastCreatedCheckListRow);\n  setAddNewRowToCheckListTrig(true);\n  setCheckListItems([...checkListItems, newRowObj]);\n};\n\nexport const handleComplitedChange = (event, setComplited) => {\n  setComplited(event.target.checked);\n};\n","import React, { useState, useEffect } from \"react\";\n\n//import MUI components\nimport Box from \"@mui/material/Box\";\nimport Icon from \"@mui/material/Icon\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Switch from \"@mui/material/Switch\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\n\n//import MUI icons\nimport CheckBoxOutlinedIcon from \"@mui/icons-material/CheckBoxOutlined\";\n\n//import mettods\nimport {\n  checkedRowsCounter,\n  ChkListCboxToggle,\n  ChkListTextEditToggle,\n  HandleRemoveRowFromCheckList,\n  HandleAddNewRowToCheckList,\n} from \"./methods\";\n\n//import styles\n// import * as Style from \"./styleConst\";\nimport { TextareaChkListText } from \"./styleConst\";\n\n//import constants\nimport { checkListArr } from \"./constatns\";\n\nexport default function Checklist() {\n  const [hideChecked, setHideChecked] = useState(false);\n  const [addNewRowToCheckListTrig, setAddNewRowToCheckListTrig] = useState(false);\n  const [checkListItems, setCheckListItems] = useState(checkListArr);\n  const [checkListItemText, setCheckListItemText] = useState(\"\");\n  const [progress, setProgress] = useState(0);\n  const [IDofTheLastCreatedCheckListRow, setIDofTheLastCreatedCheckListRow] = useState(0);\n\n  useEffect(() => {\n    console.log(\"dsadasd\");\n    checkedRowsCounter(checkListItems, setProgress);\n  }, [checkListItems]);\n\n  const handleHideCheckedChange = (event) => {\n    setHideChecked(event.target.checked);\n  };\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        flexWrap: \"nowrap\",\n        width: \"100%\",\n        backgroundColor: \"#f5f5f5\",\n        borderRadius: \"4px\",\n        padding: \"5px\",\n      }}\n    >\n      {/* чекбоксы */}\n      <Icon\n        sx={{\n          marginTop: \"4px\",\n          position: \"absolute\",\n          left: \"20px\",\n        }}\n      >\n        <CheckBoxOutlinedIcon />\n      </Icon>\n      <Typography\n        sx={{\n          cursor: \"default\",\n          fontSize: \"20px\",\n          color: \"#172b4d\",\n          width: \"100px\",\n          padding: \"3px\",\n        }}\n      >\n        Чек-лист\n      </Typography>\n\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          alignItems: \"center\",\n          justifyContent: \"flex-start\",\n          width: \"350px\",\n          borderRadius: \"3px\",\n          paddingX: \"10px\",\n          paddingBottom: \"5px\",\n          marginBottom: \"15px\",\n          boxShadow: \"1\",\n        }}\n      >\n        <FormControlLabel\n          sx={{\n            width: \"284px\",\n            justifyContent: \"space-between\",\n            marginBottom: \"4px\",\n          }}\n          value=\"top\"\n          control={\n            <Switch\n              checked={hideChecked}\n              onChange={handleHideCheckedChange}\n              inputProps={{ \"aria-label\": \"controlled\" }}\n            />\n          }\n          label={\n            <Typography\n              sx={{\n                cursor: \"pointer\",\n                fontSize: \"14px\",\n                color: \"#172b4d\",\n              }}\n            >\n              Скрывать отмеченные пункты\n            </Typography>\n          }\n          labelPlacement=\"start\"\n        />\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"large\"\n          sx={{\n            width: \"240px\",\n            height: \"32px\",\n            fontSize: \"14px\",\n            marginBottom: \"10px\",\n            backgroundColor: \"#d7d7d7\",\n            color: \"black\",\n            \"&:hover\": {\n              backgroundColor: \"#e3e3e3\",\n            },\n          }}\n        >\n          Удалить чек-лист\n        </Button>\n      </Box>\n\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          flexWrap: \"nowrap\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          width: \"100%\",\n        }}\n      >\n        <LinearProgress variant=\"determinate\" value={progress} sx={{ width: \"90%\" }} />\n        <Typography\n          sx={{\n            cursor: \"default\",\n            fontSize: \"14px\",\n            color: \"#172b4d\",\n            marginRight: \"10px\",\n          }}\n        >\n          {progress}%\n        </Typography>\n      </Box>\n      <List>\n        {checkListItems.map((item) => {\n          const LabelID = `checkbox-list-label-${item.id}`;\n\n          return (\n            <ListItem\n              sx={{\n                display: item.isChecked && hideChecked ? \"none\" : \"flex\",\n                padding: \"0px\",\n                margin: \"0px\",\n              }}\n              key={item.id}\n            >\n              <Checkbox\n                disabled={item.isSelected}\n                checked={item.isChecked}\n                onChange={ChkListCboxToggle(\n                  item.id,\n                  checkListItems,\n                  setProgress,\n                  setCheckListItems\n                )}\n                inputProps={{ \"aria-labelledby\": LabelID }}\n              />\n              <ListItemText\n                id={LabelID}\n                primary={\n                  item.isSelected ? (\n                    <Box\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        flexWrap: \"nowrap\",\n                        padding: \"6px\",\n                        boxShadow: \"1\",\n                        borderRadius: \"4px\",\n                      }}\n                    >\n                      <TextareaChkListText\n                        defaultValue={item.text}\n                        autoFocus\n                        disabled={false}\n                        aria-label={`${LabelID}`}\n                        placeholder=\"Это поле нужно заполнить\"\n                        required\n                        value={checkListItemText}\n                        onChange={(event) => {\n                          setCheckListItemText(event.target.value);\n                        }}\n                      />\n                      <Box\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                          flexWrap: \"nowrap\",\n                          alignContent: \"center\",\n                          alignItems: \"center\",\n                          marginTop: \"6px\",\n                          justifyContent: \"space-between\",\n                        }}\n                      >\n                        <Box\n                          sx={{\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                            flexWrap: \"nowrap\",\n                            alignContent: \"center\",\n                            alignItems: \"center\",\n                            marginTop: \"6px\",\n                          }}\n                        >\n                          <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            size=\"large\"\n                            sx={{\n                              width: \"110px\",\n                              height: \"26px\",\n                              marginTop: \"4px\",\n                              marginRight: \"10px\",\n                            }}\n                            onClick={ChkListTextEditToggle(\n                              item.id,\n                              \"save\",\n                              IDofTheLastCreatedCheckListRow,\n                              addNewRowToCheckListTrig,\n                              checkListItems,\n                              setCheckListItemText,\n                              checkListItemText,\n                              setCheckListItems,\n                              setAddNewRowToCheckListTrig\n                            )}\n                          >\n                            Сохранить\n                          </Button>\n                          <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            size=\"large\"\n                            sx={{\n                              width: \"90px\",\n                              height: \"26px\",\n                              marginTop: \"4px\",\n                              marginRight: \"10px\",\n                            }}\n                            onClick={ChkListTextEditToggle(\n                              item.id,\n                              \"cancel\",\n                              IDofTheLastCreatedCheckListRow,\n                              addNewRowToCheckListTrig,\n                              checkListItems,\n                              setCheckListItemText,\n                              checkListItemText,\n                              setCheckListItems,\n                              setAddNewRowToCheckListTrig\n                            )}\n                          >\n                            Отмена\n                          </Button>\n                        </Box>\n                        <Button\n                          variant=\"contained\"\n                          color=\"secondary\"\n                          size=\"large\"\n                          sx={{\n                            display: addNewRowToCheckListTrig ? \"none\" : \"inherit\",\n                            width: \"90px\",\n                            height: \"26px\",\n                            fontSize: \"14px\",\n                            marginTop: \"10px\",\n                            backgroundColor: \"#d7d7d7\",\n                            color: \"black\",\n                            \"&:hover\": {\n                              backgroundColor: \"#e3e3e3\",\n                            },\n                          }}\n                          onClick={() =>\n                            HandleRemoveRowFromCheckList(item.id, checkListItems, setCheckListItems)\n                          }\n                        >\n                          Удалить\n                        </Button>\n                      </Box>\n                    </Box>\n                  ) : (\n                    <Box\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        flexWrap: \"nowrap\",\n                        alignContent: \"center\",\n                        alignItems: \"center\",\n                        paddingX: \"6px\",\n                        borderRadius: \"6px\",\n                        width: \"100%\",\n                        minHeight: \"36px\",\n                        \"&:hover\": { backgroundColor: \"#e1e1e1\" },\n                      }}\n                      onClick={ChkListTextEditToggle(\n                        item.id,\n                        \"open\",\n                        IDofTheLastCreatedCheckListRow,\n                        addNewRowToCheckListTrig,\n                        checkListItems,\n                        setCheckListItemText,\n                        checkListItemText,\n                        setCheckListItems,\n                        setAddNewRowToCheckListTrig\n                      )}\n                    >\n                      <Typography\n                        sx={{\n                          cursor: \"pointer\",\n                          fontSize: \"14px\",\n                          color: item.isChecked ? \"#525863\" : \"#172b4d\",\n                          textDecoration: item.isChecked && \"line-through\",\n                        }}\n                      >\n                        {item.text}\n                      </Typography>\n                    </Box>\n                  )\n                }\n              />\n            </ListItem>\n          );\n        })}\n      </List>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        size=\"large\"\n        sx={{\n          display: addNewRowToCheckListTrig ? \"none\" : \"inherit\",\n          width: \"290px\",\n          height: \"32px\",\n          fontSize: \"14px\",\n          lineHeight: \"1.5\",\n          marginBottom: \"10px\",\n          backgroundColor: \"#d7d7d7\",\n          color: \"black\",\n          \"&:hover\": {\n            backgroundColor: \"#e3e3e3\",\n          },\n        }}\n        onClick={() =>\n          HandleAddNewRowToCheckList(\n            setIDofTheLastCreatedCheckListRow,\n            setAddNewRowToCheckListTrig,\n            setCheckListItems,\n            checkListItems\n          )\n        }\n      >\n        Добавить еще один пункт\n      </Button>\n    </Box>\n  );\n}\n","import React from \"react\";\n\n//import MUI components\nimport Box from \"@mui/material/Box\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\n\n//import application components\nimport Header from \"./Header\";\nimport Users from \"./Usets\";\n\n//import static\nimport img1 from \"../../../static/images/img1.png\";\n\n//import styles\nimport * as Style from \"./styleConst\";\n\nimport Cheeps from \"./Cheeps\";\nimport Actions from \"./Actions\";\nimport Description from \"./Description\";\nimport Checklist from \"./Checklist\";\n\nexport default function AllSettingsOfCard() {\n  return (\n    <Box sx={Style.mainContainer}>\n      <CardMedia\n        sx={Style.cardMedia}\n        component=\"img\"\n        //   image=\"https://slp-statics.astockcdn.net/static_assets/staging/24winter/home/curated-collections/card-2.jpg?width=580\"\n        image={img1}\n        alt=\"Paella dish\"\n      />\n      <Box>\n        <Box sx={{ paddingLeft: \"55px\", marginBottom: \"20px\" }}>\n          <Header />\n          <Box\n            sx={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              width: \"100%\",\n            }}\n          >\n            <Box className=\"main-action-container-in-the-card\" sx={{ marginTop: \"25px\" }}>\n              <Box className=\"basic-operations-with-card\" sx={Style.basicOperationsWithCard}>\n                <Users />\n                <Cheeps />\n                <Actions />\n                <Description />\n                <Checklist />\n              </Box>\n            </Box>\n            <Box\n              sx={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                flexWrap: \"nowrap\",\n                width: \"100%\",\n                alignItems: \"center\",\n                alignContent: \"center\",\n                marginTop: \"50px\",\n              }}\n            >\n              <Typography\n                sx={{\n                  cursor: \"pointer\",\n                  fontSize: \"16px\",\n                }}\n              >\n                Добавить на карточку\n              </Typography>\n              <Box\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  flexWrap: \"nowrap\",\n                  paddingY: \"16px\",\n                }}\n              >\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  size=\"large\"\n                  sx={{\n                    width: \"176px\",\n                    height: \"32px\",\n                    fontSize: \"14px\",\n                    lineHeight: \"1.5\",\n                    marginBottom: \"10px\",\n                    backgroundColor: \"#d7d7d7\",\n                    color: \"black\",\n                    \"&:hover\": {\n                      backgroundColor: \"#e3e3e3\",\n                    },\n                  }}\n                  // onClick={HandleAddNewRowToCheckList}\n                >\n                  Метки\n                </Button>\n\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  size=\"large\"\n                  sx={{\n                    width: \"176px\",\n                    height: \"32px\",\n                    fontSize: \"14px\",\n                    lineHeight: \"1.5\",\n                    marginBottom: \"10px\",\n                    backgroundColor: \"#d7d7d7\",\n                    color: \"black\",\n                    \"&:hover\": {\n                      backgroundColor: \"#e3e3e3\",\n                    },\n                  }}\n                  // onClick={HandleAddNewRowToCheckList}\n                >\n                  Чек-лист\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  size=\"large\"\n                  sx={{\n                    width: \"176px\",\n                    height: \"32px\",\n                    fontSize: \"14px\",\n                    lineHeight: \"1.5\",\n                    marginBottom: \"10px\",\n                    backgroundColor: \"#d7d7d7\",\n                    color: \"black\",\n                    \"&:hover\": {\n                      backgroundColor: \"#e3e3e3\",\n                    },\n                  }}\n                  // onClick={HandleAddNewRowToCheckList}\n                >\n                  Даты\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  size=\"large\"\n                  sx={{\n                    width: \"176px\",\n                    height: \"32px\",\n                    fontSize: \"14px\",\n                    lineHeight: \"1.5\",\n                    marginBottom: \"10px\",\n                    backgroundColor: \"#d7d7d7\",\n                    color: \"black\",\n                    \"&:hover\": {\n                      backgroundColor: \"#e3e3e3\",\n                    },\n                  }}\n                  // onClick={HandleAddNewRowToCheckList}\n                >\n                  Вложения\n                </Button>\n              </Box>\n            </Box>\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n","import React, { useState } from \"react\";\nimport CardChip from \"../Card/CardChipsSection/CardChip\";\nimport Box from \"@mui/material/Box\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport EditOutlinedIcon from \"@mui/icons-material/EditOutlined\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\n\nimport { boxStylehipContainer, chipStyleChipContainer } from \"../../constants/chipContainerStyle\";\n\nexport default function ChipContainer({ color, labelId }) {\n  const [value, setValue] = useState(false);\n  return (\n    <Box sx={boxStylehipContainer}>\n      <ListItemButton\n        onClick={() => setValue(!value)}\n        sx={{\n          padding: \"0px\",\n          height: \"32px\",\n          \"&:hover\": {\n            backgroundColor: \"rgba(0, 0, 0, 0)\",\n          },\n        }}\n        role={undefined}\n        dense\n      >\n        <Checkbox\n          edge=\"start\"\n          tabIndex={-1}\n          disableRipple\n          inputProps={{ \"aria-labelledby\": labelId }}\n          checked={value}\n        />\n        <CardChip color={color} chipStyle={chipStyleChipContainer} />\n      </ListItemButton>\n      <IconButton aria-label=\"settings\">\n        <EditOutlinedIcon sx={{ fontSize: \"18px\" }} />\n      </IconButton>\n    </Box>\n  );\n}\n","import React from \"react\";\n\n//import MUI components\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport TextField from \"@mui/material/TextField\";\nimport CardActions from \"@mui/material/CardActions\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseOutlinedIcon from \"@mui/icons-material/CloseOutlined\";\n\n//import components\nimport ChipContainer from \"./ChipContainer\";\n\n// import constants\nimport { chipColor } from \"../../constants/colorsConst\";\n\n\nexport default function ChangeChipsPallet({ closeHandle }) {\n  return (\n    <Card\n      sx={{\n        display: \"flex\",\n        flexDirection: \"Column\",\n        alignItems: \"center\",\n        height: \"fit-content\",\n        paddingX: \"12px\",\n      }}\n    >\n      <CardHeader\n        sx={{\n          padding: \"5px\",\n          marginBottom: \"10px\",\n        }}\n        titleTypographyProps={{\n          fontSize: \"20px\",\n          color: \"#172b4d\",\n        }}\n        title=\"Метки\"\n        action={\n          <IconButton\n            onClick={closeHandle}\n            aria-label=\"Change-Chips-Pallet\"\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              right: \"-86px\",\n            }}\n          >\n            <CloseOutlinedIcon sx={{ fontSize: \"18px\" }} />\n          </IconButton>\n        }\n      />\n      <TextField\n        label=\"Искать метки\"\n        id=\"search-chip\"\n        size=\"small\"\n        autoFocus={true}\n        sx={{\n          width: \"260px\",\n          marginBottom: \"10px\",\n        }}\n      />\n\n      <CardContent\n        sx={{\n          padding: \"0px\",\n        }}\n      >\n        <List>\n          {[\n            0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\n            // 15, 16, 17, 18, 19, 20, 21,\n            // 22, 23, 24, 25, 26, 27, 28, 29,\n          ].map((value) => {\n            const labelId = `checkbox-list-label-${value}`;\n            return (\n              <ListItem key={value} disablePadding>\n                <ChipContainer color={chipColor[value]} labelId={labelId} />\n              </ListItem>\n            );\n          })}\n        </List>\n      </CardContent>\n      <CardActions\n        disableSpacing\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          width: \"100%\",\n        }}\n      >\n        <Button\n          variant=\"contained\"\n          sx={{\n            width: \"100%\",\n            height: \"32px\",\n            fontSize: \"14px\",\n            marginBottom: \"10px\",\n            backgroundColor: \"#d7d7d7\",\n            color: \"#172b4d\",\n            \"&:hover\": {\n              backgroundColor: \"#e3e3e3\",\n            },\n          }}\n        >\n          Создать новую метку\n        </Button>\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          sx={{\n            width: \"100%\",\n            height: \"32px\",\n            fontSize: \"14px\",\n            marginBottom: \"10px\",\n            backgroundColor: \"#d7d7d7\",\n            color: \"#172b4d\",\n            \"&:hover\": {\n              backgroundColor: \"#e3e3e3\",\n            },\n          }}\n        >\n          Показать больше меток\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React from \"react\";\n\n//import MUI components\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport List from \"@mui/material/List\";\nimport ListSubheader from \"@mui/material/ListSubheader\";\nimport ListItem from \"@mui/material/ListItem\";\nimport Avatar from \"@mui/material/Avatar\";\nimport red from \"@mui/material/colors/red\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseOutlinedIcon from \"@mui/icons-material/CloseOutlined\";\nimport { ListItemAvatar } from \"@mui/material\";\n\nconst avatarPictStyle = {\n  width: \"28px\",\n  height: \"28px\",\n  marginRight: \"0px\",\n  bgcolor: red[500],\n};\n\nexport default function ChangeUsers({ closeHandle }) {\n  return (\n    <Card\n      sx={{\n        display: \"flex\",\n        flexDirection: \"Column\",\n        alignItems: \"center\",\n        height: \"fit-content\",\n        paddingX: \"12px\",\n        width:\"219px\"\n      }}\n    >\n      <CardHeader\n        sx={{\n          padding: \"10px\",\n          marginBottom: \"10px\",\n        }}\n        titleTypographyProps={{\n          fontSize: \"20px\",\n          color: \"#172b4d\",\n        }}\n        title=\"Участники\"\n        action={\n          <IconButton\n            onClick={closeHandle}\n            aria-label=\"Change-Chips-Pallet\"\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              right: \"-28px\",\n              backgroundColor:\"rgba(0, 0, 0, 0.14)\",\n            }}\n          >\n            <CloseOutlinedIcon sx={{ fontSize: \"18px\" }} />\n          </IconButton>\n        }\n      />\n      <CardContent\n        sx={{\n          padding: \"0px\",\n        }}\n      >\n        <List subheader={<ListSubheader sx={{lineHeight:\"32px\"}}>Пользователи на карточке</ListSubheader>}>\n          <ListItem\n          sx={{width:\"230px\", paddingX:\"4px\", paddingY:\"2px\"}}\n          >\n            <ListItemAvatar sx={{minWidth:\"28px\"}}>\n              <Avatar sx={avatarPictStyle} aria-label={`${\"L\"}-avatar-label`}>\n                {\"L\"}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText sx={{marginLeft:\"8px\"}}>{'Leonardo'}</ListItemText>\n          </ListItem>\n          <ListItem\n          sx={{width:\"230px\", paddingX:\"4px\", paddingY:\"2px\"}}\n          >\n            <ListItemAvatar sx={{minWidth:\"28px\"}}>\n              <Avatar sx={avatarPictStyle} aria-label={`${\"D\"}-avatar-label`}>\n                {\"D\"}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText sx={{marginLeft:\"8px\"}}>{'Donatello'}</ListItemText>\n          </ListItem>\n\n        </List>\n\n        <List subheader={<ListSubheader sx={{lineHeight:\"32px\"}}>Пользователи на доске</ListSubheader>}>\n          <ListItem\n          sx={{width:\"230px\", paddingX:\"4px\", paddingY:\"2px\"}}\n          >\n            <ListItemAvatar sx={{minWidth:\"28px\"}}>\n              <Avatar sx={avatarPictStyle} aria-label={`${\"M\"}-avatar-label`}>\n                {\"M\"}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText sx={{marginLeft:\"8px\"}}>{'Mikelangelo'}</ListItemText>\n          </ListItem>\n          <ListItem\n          sx={{width:\"230px\", paddingX:\"4px\", paddingY:\"2px\"}}\n          >\n            <ListItemAvatar sx={{minWidth:\"28px\"}}>\n              <Avatar sx={avatarPictStyle} aria-label={`${\"R\"}-avatar-label`}>\n                {\"R\"}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText sx={{marginLeft:\"8px\"}}>{'Rafael'}</ListItemText>\n          </ListItem>\n\n        </List>\n\n      </CardContent>\n      <CardActions\n        disableSpacing\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          width: \"100%\",\n        }}\n      ></CardActions>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport \"./Calendar.css\";\nimport Calendar from \"react-calendar\";\n\nimport Box from \"@mui/material/Box\";\n\nexport default function Dates({\n  getDayHandler,\n  calendarValue,\n  startDayChecked,\n  completitionDayChecked,\n}) {\n\n  return (\n    <Box\n      sx={{\n        marginBottom: \"45px\",\n      }}\n    >\n      <Calendar\n        selectRange={startDayChecked && completitionDayChecked}\n        onChange={(calendarValue) => getDayHandler(calendarValue)}\n        value={calendarValue}\n      />\n    </Box>\n  );\n}\n","import React from \"react\";\nimport \"./Period.css\";\nimport Box from \"@mui/material/Box\";\n\nimport { DateField } from \"@mui/x-date-pickers/DateField\";\nimport { TimeField } from \"@mui/x-date-pickers/TimeField/\";\n\nimport Checkbox from \"@mui/material/Checkbox\";\n\nexport default function Period({\n  startDayValue,\n  completitionDayValue,\n  getCompletitionTimeHandler,\n  completitionTimeValue,\n  getstartDayCheckedHandler,\n  startDayChecked,\n  getcompletitionDayCheckedHandler,\n  completitionDayChecked,\n  defaultValue,\n}) {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          marginBottom: \"25px\",\n        }}\n      >\n        <Checkbox\n          checked={startDayChecked}\n          onChange={(event) => getstartDayCheckedHandler(event.target.checked)}\n        />\n        <DateField\n          control={\"control\"}\n          label=\"Начало\"\n          size=\"small\"\n          disabled={!startDayChecked}\n          format=\"d:M:yyyy\"\n          timezone=\"UTC\"\n          defaultValue={defaultValue}\n          value={startDayValue}\n          id={\"task-start-day\"}\n          sx={{\n            width: \"115px\",\n          }}\n        />\n      </Box>\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          marginBottom: \"30px\",\n        }}\n      >\n        <Checkbox\n          checked={completitionDayChecked}\n          onChange={(event) => getcompletitionDayCheckedHandler(event.target.checked)}\n        />\n        <DateField\n          control={\"control\"}\n          label=\"Завершение\"\n          size=\"small\"\n          disabled={!completitionDayChecked}\n          format=\"dd:MM:yyyy\"\n          timezone=\"UTC\"\n          defaultValue={defaultValue}\n          value={completitionDayValue}\n          id={\"task-completition-day\"}\n          sx={{\n            width: \"115px\",\n            marginRight: \"20px\",\n          }}\n        />\n        <TimeField\n          label=\"Время\"\n          size=\"small\"\n          disabled={!completitionDayChecked}\n          ampm={false}\n          defaultValue={defaultValue}\n          value={completitionTimeValue}\n          onChange={(completitionTimeValue) => getCompletitionTimeHandler(completitionTimeValue)}\n          id={\"task-completition-time\"}\n          sx={{\n            width: \"80px\",\n          }}\n        />\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Select from \"@mui/material/Select\";\nimport Typography from \"@mui/material/Typography\";\n\nconst typographyStyle = {\n  verticalAligne: \"top\",\n  overflow: \"visible\",\n  fontSize: \"14px\",\n  fontWeight: \"400\",\n  lineHeight: \"1.4\",\n  clolr: \"#172b4d\",\n};\n\nexport default function Remainder() {\n  const [remainder, seRemainder] = React.useState(80);\n\n  const handleChange = (event) => {\n    seRemainder(event.target.value);\n  };\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        marginBottom: \"15px\",\n      }}\n    >\n      <InputLabel id=\"remainder-label\">Установить напоминание</InputLabel>\n\n      <Select\n        labelId=\"remainder-label\"\n        id=\"remainder-select\"\n        value={remainder}\n        label=\"Установить напоминание\"\n        onChange={handleChange}\n        sx={{\n          marginBottom: \"10px\",\n          height: \"38px\",\n          fontSize: \"14px\",\n        }}\n      >\n        <MenuItem value={10}>Без даты</MenuItem>\n        <MenuItem value={20}>В указанное время</MenuItem>\n        <MenuItem value={30}>За 5 минут</MenuItem>\n        <MenuItem value={40}>За 10 минут</MenuItem>\n        <MenuItem value={50}>За 15 минут</MenuItem>\n        <MenuItem value={60}>За 1 час</MenuItem>\n        <MenuItem value={70}>За 2 часа</MenuItem>\n        <MenuItem value={80}>За 1 день</MenuItem>\n        <MenuItem value={90}>За 2 дня</MenuItem>\n      </Select>\n      <Typography sx={typographyStyle}>\n        Участники и подписчики этой карточки получат напомининия.\n      </Typography>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\n\nexport default function DateAndTimeButtonsGroup() {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        width: \"100%\",\n      }}\n    >\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        sx={{\n          width: \"100%\",\n          height: \"32px\",\n          fontSize: \"14px\",\n          marginBottom: \"10px\",\n        }}\n      >\n        Сохранить\n      </Button>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        size=\"large\"\n        sx={{\n          width: \"100%\",\n          height: \"32px\",\n          fontSize: \"14px\",\n          marginBottom: \"10px\",\n          backgroundColor: \"#d7d7d7\",\n          color: \"black\",\n          \"&:hover\": {\n            backgroundColor: \"#e3e3e3\",\n          }\n        }}\n      >\n        Удалить\n      </Button>\n    </Box>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseOutlinedIcon from \"@mui/icons-material/CloseOutlined\";\n\nimport Dates from \"./Calendar\";\nimport Period from \"./Period\";\nimport Remainder from \"./Reminder\";\nimport DateAndTimeButtonsGroup from \"./DateAndTimeButtonsGroup\";\n\nconst defaultValue = new Date();\n\nexport default function DatesAndTimePallet({ closeHandle }) {\n  const [calendarValue, setCalendarValue] = useState();\n  const [startDayValue, setStartDayValue] = useState(defaultValue);\n  const [completitionDayValue, setCompletitiontDayValue] = useState(defaultValue);\n  const [completitionTimeValue, setCompletitiontTimeValue] = useState(defaultValue);\n  const [startDayChecked, setStartDayChecked] = useState(false);\n  const [completitionDayChecked, setCompletitionDayChecked] = useState(false);\n\n  useEffect(() => {\n    if (calendarValue === undefined) return;\n\n    if (startDayChecked & completitionDayChecked) {\n      setStartDayValue(calendarValue[0]);\n      setCompletitiontDayValue(calendarValue[1]);\n    }\n\n    if (startDayChecked & !completitionDayChecked) {\n      setStartDayValue(calendarValue);\n    }\n\n    if (completitionDayChecked & !startDayChecked) {\n      setCompletitiontDayValue(calendarValue);\n    }\n  }, [calendarValue]);\n\n  const getDayHandler = (calendarValue) => {\n    setCalendarValue(calendarValue);\n  };\n\n  const getCompletitionTimeHandler = (completitionTimeValue) => {\n    setCompletitiontTimeValue(completitionTimeValue);\n  };\n\n  const getstartDayCheckedHandler = (startDayChecked) => {\n    setStartDayChecked(startDayChecked);\n  };\n\n  const getcompletitionDayCheckedHandler = (completitionDayChecked) => {\n    setCompletitionDayChecked(completitionDayChecked);\n  };\n\n  return (\n    <Card\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        aligneItems: \"center\",\n        borderRadius: \"10px\",\n        width: \"304px\",\n        height: \"fit-content\",\n        padding: \"12px\",\n        backgroundColor: \"#fff\",\n      }}\n    >\n      <CardHeader\n        sx={{\n          padding: \"10px\",\n          marginBottom: \"10px\",\n        }}\n        titleTypographyProps={{ textAlign: \"center\", fontSize: \"20px\", color: \"#172b4d\" }}\n        title=\"Даты и время\"\n        action={\n          <IconButton\n            onClick={closeHandle}\n            aria-label=\"Change-Chips-Pallet\"\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              right: \"8px\",\n              backgroundColor: \"rgba(0, 0, 0, 0.14)\",\n            }}\n          >\n            <CloseOutlinedIcon sx={{ fontSize: \"18px\" }} />\n          </IconButton>\n        }\n      />\n\n      <Dates\n        getDayHandler={getDayHandler}\n        calendarValue={calendarValue}\n        startDayChecked={startDayChecked}\n        completitionDayChecked={completitionDayChecked}\n      />\n      <Period\n        startDayValue={startDayValue}\n        completitionDayValue={completitionDayValue}\n        getCompletitionTimeHandler={getCompletitionTimeHandler}\n        completitionTimeValue={completitionTimeValue}\n        getstartDayCheckedHandler={getstartDayCheckedHandler}\n        startDayChecked={startDayChecked}\n        getcompletitionDayCheckedHandler={getcompletitionDayCheckedHandler}\n        completitionDayChecked={completitionDayChecked}\n        defaultValue={defaultValue}\n      />\n      <Remainder />\n      <DateAndTimeButtonsGroup />\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\n\n//import MIU components\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\nimport TaskCard from \"../TaskCard\";\nimport Box from \"@mui/material/Box\";\n\n//import components\nimport ChangeChipsPallet from \"../../ChangeChips/ChangeChipsPallet\";\nimport ChangeUsers from \"../ChangeUsers/ChangeUsers\";\nimport DatesAndTimePallet from \"../../DateAndTime/DatesAndTimePallet\";\n\nconst buttonStyle = {\n  height: \"32px\",\n  fontSize: \"14px\",\n  lineHeight: \"1.5\",\n  marginBottom: \"10px\",\n  backgroundColor: \"#d7d7d7\",\n  color: \"black\",\n  \"&:hover\": {\n    backgroundColor: \"#e3e3e3\",\n  },\n};\n\nexport default function EditButtonsGroup({ handleClickOpen }) {\n  const [typePop, setTypePop] = useState(0);\n\n  function closeHandle() {\n    setTypePop(0);\n  }\n\n  function Pop(type) {\n    let pop = null;\n\n    switch (type) {\n      case 1:\n        pop = <ChangeChipsPallet closeHandle={closeHandle} />;\n        break;\n\n      case 2:\n        pop = <ChangeUsers closeHandle={closeHandle} />;\n        break;\n      // case 3:\n        // pop = <ChangeUsers closeHandle={closeHandle} />;\n        // break;\n      case 4:\n        pop = <DatesAndTimePallet closeHandle={closeHandle} />;\n        break;\n\n      default:\n        break;\n    }\n    return <Box sx={{ margin: \"10px\" }}>{pop}</Box>;\n  }\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"nowrap\",\n        alignItems: \"flex-start\",\n        margin: \"10px\",\n      }}\n    >\n      <TaskCard />\n      {typePop === 0 ? (\n        <Box sx={{ margin: \"10px\" }}>\n          <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"flex-start\" spacing={1}>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              size=\"large\"\n              sx={buttonStyle}\n              onClick={() => handleClickOpen(1)}\n            >\n              Открыть карточку\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              size=\"large\"\n              sx={buttonStyle}\n              onClick={() => setTypePop(1)}\n            >\n              Изменить метки\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              size=\"large\"\n              sx={buttonStyle}\n              onClick={() => setTypePop(2)}\n            >\n              Изменить участников\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              size=\"large\"\n              sx={buttonStyle}\n              // onClick={() => setTypePop(3)}\n            >\n              Сменить обложку\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              size=\"large\"\n              sx={buttonStyle}\n              onClick={() => setTypePop(4)}\n            >\n              Изменить даты\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              size=\"large\"\n              sx={buttonStyle}\n              // onClick={HandleAddNewRowToCheckList}\n            >\n              Переместить\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              size=\"large\"\n              sx={buttonStyle}\n              // onClick={HandleAddNewRowToCheckList}\n            >\n              Архивировать\n            </Button>\n          </Stack>\n        </Box>\n      ) : null}\n\n      {Pop(typePop)}\n    </Box>\n  );\n}\n","import React, { useState } from \"react\";\r\nimport Draggable from \"react-draggable\";\r\n\r\nimport \"@fontsource/roboto/400.css\";\r\n//import MIU components\r\nimport Box from \"@mui/material/Box\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Paper from \"@mui/material/Paper\";\r\n\r\n//import MIU icons\r\nimport EditOutlinedIcon from \"@mui/icons-material/EditOutlined\";\r\nimport CloseOutlinedIcon from \"@mui/icons-material/CloseOutlined\";\r\n\r\n// import components\r\nimport CardImage from \"./CardImageSection/CardImage\";\r\nimport CardDescription from \"./CardDescriptionSection/CardDescription\";\r\nimport CardStatistic from \"./CardStatisticIconsSection/CardStatistic\";\r\nimport CardAvatarSection from \"./Avatar/CardAvatarSection\";\r\nimport CardChipContainer from \"./CardChipsSection/CardChipContainer\";\r\nimport AllSettingsOfCard from \"./AllSettingsOfCard/AllSettingsOfCard\";\r\nimport EditButtonsGroup from \"./EditButtonsGroup/EditButtonsGroup\";\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n      <Paper\r\n        sx={{\r\n          borderTopLeftRadius: \"16px\",\r\n          borderTopRightRadius: \"16px\",\r\n          backgroundColor: \"rgba(66, 66, 70, 0.82)\",\r\n        }}\r\n        {...props}\r\n      />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nfunction Pop(type, handleClickOpen) {\r\n  let pop = null;\r\n\r\n  switch (type) {\r\n    case 1:\r\n      pop = <AllSettingsOfCard />;\r\n      break;\r\n    case 2:\r\n      pop = <EditButtonsGroup handleClickOpen={handleClickOpen} />;\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  return pop;\r\n}\r\n\r\nconst cardStyle = {\r\n  display: \"block\",\r\n  position: \"relative\",\r\n  borderRadius: \"20px\",\r\n  margin: \"0px\",\r\n  padding: \"0px\",\r\n  width: \"256px\",\r\n  cursor: \"pointer\",\r\n  height: \"fit-content\",\r\n  \"&:hover\": {\r\n    boxShadow: \"3\",\r\n  },\r\n};\r\n\r\nconst CardContentStyle = {\r\n  display: \"flex\",\r\n  flexWrap: \"wrap\",\r\n  minHeight: \"24px\",\r\n  paddingTop: \"8px\",\r\n  paddingX: \"12px\",\r\n  paddingBottom: \"4px\",\r\n};\r\n\r\nconst boxEditOutlinedIconStyle = {\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  position: \"absolute\",\r\n  top: \"8px\",\r\n  right: \"8px\",\r\n  width: \"40px\",\r\n  height: \"40px\",\r\n  borderRadius: \"20px\",\r\n\r\n  backgroundColor: \"#eaeaea\",\r\n  \"&:hover\": {\r\n    backgroundColor: \"#dbdbdb\",\r\n  },\r\n};\r\n\r\nexport default function TaskCard() {\r\n  const [showEditIcon, setShowEditIcon] = useState(false);\r\n  const [openPop, setOpenPop] = useState(false);\r\n  const [popupType, setPopupType] = useState(0);\r\n\r\n  const handleClickOpen = (type) => {\r\n    setOpenPop(true);\r\n    switch (type) {\r\n      case 1:\r\n        setPopupType(type);\r\n        break;\r\n      case 2:\r\n        setPopupType(type);\r\n        break;\r\n      default:\r\n        setPopupType(0);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpenPop(false);\r\n    setPopupType(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        sx={cardStyle}\r\n        onMouseOver={() => setShowEditIcon(true)}\r\n        onMouseOut={() => setShowEditIcon(false)}\r\n      >\r\n        {showEditIcon && (\r\n          <Box sx={boxEditOutlinedIconStyle}>\r\n            <IconButton onClick={() => handleClickOpen(2)} aria-label=\"edit\">\r\n              <EditOutlinedIcon />\r\n            </IconButton>\r\n          </Box>\r\n        )}\r\n        <Box onClick={() => handleClickOpen(1)}>\r\n          <CardImage />\r\n          <CardContent sx={CardContentStyle}>\r\n            <CardChipContainer />\r\n            <CardDescription />\r\n            <CardStatistic />\r\n            <CardAvatarSection />\r\n          </CardContent>\r\n        </Box>\r\n      </Card>\r\n\r\n      <Dialog\r\n        sx={{ height: \"100%\", backgroundColor: \"rgba(0, 0, 0, 0.55)\" }}\r\n        // scroll=\"body\"\r\n        maxWidth={\"xl\"}\r\n        open={openPop}\r\n        onClose={handleClose}\r\n        PaperComponent={PaperComponent}\r\n        aria-labelledby=\"draggable-dialog-title\"\r\n      >\r\n        <DialogTitle\r\n          style={{\r\n            background: \"linear-gradient(rgb(93, 93, 96), rgba(21, 21, 23, 0.04))\",\r\n            paddingTop: \"6px\",\r\n            paddingBottom: \"8px\",\r\n            cursor: \"move\",\r\n            display: \"inline-flex\",\r\n            flexFlow: \"row\",\r\n            flexDirection: \"row-reverse\",\r\n            borderTopLeftRadius: \"16px\",\r\n            borderTopRightRadius: \"16px\",\r\n          }}\r\n          id=\"draggable-dialog-title\"\r\n        >\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            sx={{ backgroundColor: \"#777\", \"&:hover\": { backgroundColor: \"#ccc\" } }}\r\n            onClick={handleClose}\r\n          >\r\n            <CloseOutlinedIcon sx={{ color: \"#fff\" }} />\r\n          </IconButton>\r\n        </DialogTitle>\r\n        <DialogContent\r\n          sx={{\r\n            maxWidth: \"768px\",\r\n            // maxWidth: \"fit-content\",\r\n            overflowY: \"auto\",\r\n            overflowX: \"hidden\",\r\n            msOverflowStyle: \"none\" /* IE и Edge */,\r\n            scrollbarWidth: \"none\" /* Firefox */,\r\n            \"&::-webkit-scrollbar\": {\r\n              display: \"none\",\r\n            },\r\n            backgroundColor: \"#f5f5f5\",\r\n            paddingX: \"0px\",\r\n          }}\r\n        >\r\n          {Pop(popupType, handleClickOpen)}\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\n\n//import MUI components\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListSubheader from \"@mui/material/ListSubheader\";\n\n// import components\nimport RecipeReviewCard from \"../Card/TaskCard\";\n\nexport default function Column({ width, height }) {\n  return (\n    <List\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        flexWrap: \"nowrap\",\n        alignItems: \"center\",\n        alignContent: \"center\",\n        width: \"100%\",\n        maxWidth: \"280px\",\n        maxHeight: `${height - 90}px`,\n        marginTop: \"10px\",\n        borderRadius: \"4px\",\n        bgcolor: \"gray\",\n        boxShadow: \"10\",\n        overflow: \"auto\",\n        msOverflowStyle: \"none\" /* IE и Edge */,\n        scrollbarWidth: \"none\" /* Firefox */,\n        \"&::-webkit-scrollbar\": {\n          display: \"none\",\n        },\n      }}\n      subheader={<ListSubheader\n        sx={{\n          width: \"100%\",\n          height:\"40px\",\n          textAlign: \"center\",\n        }}\n        titletypographyprops={{\n          fontSize: \"20px\",\n          color: \"#172b4d\",\n        }}\n\n      >{\"В работе\"}</ListSubheader>}\n    >\n      <ListItem>\n        <RecipeReviewCard />\n      </ListItem>\n      <ListItem>\n        <RecipeReviewCard />\n      </ListItem>\n      <ListItem>\n        <RecipeReviewCard />\n      </ListItem>\n    </List>\n  );\n}\n","import { useEffect, useState } from \"react\";\n\n\nconst getWindowDimensions = () => {\n    const { innerWidth: width, innerHeight: height } = window;\n    return [\n      width,\n      height\n    ]\n  }\n  \n   const useWindowDimensions = () => {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n  \n    useEffect(() => {\n      function handleResize() {\n        setWindowDimensions(getWindowDimensions());\n      }\n  \n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    }, []);\n  \n    return windowDimensions;\n  }\n  \n  export default useWindowDimensions","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n//import MUI components\nimport { Box } from \"@mui/material\";\n\n//import components\n// import AllSettingsOfCard from \"../Components/Card/AllSettingsOfCard/AllSettingsOfCard\";\n// import RecipeReviewCard from \"../Components/Card/TaskCard\";\n// import DatesAndTimePallet from \"../Components/DateAndTime/DatesAndTimePallet\";\n// import ChangeChipsPallet from \"../Components/ChangeChips/ChangeChipsPallet\";\n// import CreateNewChip from \"../Components/ChangeChips/CreateNewChip\";\nimport Column from \"../Components/Column/Column\";\n\n//import utilites\nimport useWindowDimensions from \"../libs/useWindowDimentions\";\nimport { getBoard } from \"../Redux/board/board-operations\";\n\n//import states from Redux\nimport { userData } from \"../Redux/auth/auth-slice\";\n\nexport default function BoardView({ match }) {\n  const dispatch = useDispatch();\n  const userDataFromState = useSelector(userData);\n\nconsole.log('userDataFromState ', userDataFromState);\n\n  useEffect(() => {\n    dispatch(getBoard(userDataFromState.accessToken));\n  }, [dispatch]);\n\n  const [width, height] = useWindowDimensions();\n  console.log(\"width \", width, \"height \", height);\n  console.log(\"match \", match);\n\n  return (\n    <Box\n      className=\"board\"\n      sx={{\n        marginTop: \"64px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"nowrap\",\n        height: `${height - 64}px`,\n      }}\n    >\n      <Column width={width} height={height} />\n      {/* // <AllSettingsOfCard /> */}\n      {/* // <RecipeReviewCard /> */}\n      {/* // <DatesAndTimePallet /> */}\n      {/* // <ChangeChipsPallet /> */}\n      {/* // <CreateNewChip /> */}\n    </Box>\n  );\n}\n"],"names":["CardImage","_jsx","CardMedia","sx","paddingBottom","zIndex","component","image","img1","alt","preventDefault","event","CardDescription","Link","href","underline","onClick","marginBottom","children","Typography","variant","color","width","fontSize","fontWeight","lineHeight","CardCommentsIcon","_ref","boxStyle","iconStyle","typographyStyle","extTypographyStyle","Tooltip","title","placement","_jsxs","Box","Icon","TextsmsOutlinedIcon","TaskTerminIcon","inBlock","setInBlock","useState","extBoxStyle","paddingRight","borderRadius","backgroundColor","extIconStyle","onMouseOver","onMouseOut","marginRight","CancelOutlinedIcon","AccessTimeOutlinedIcon","CardCheckListIcon","CheckBoxOutlinedIcon","CardDescriptionIcon","SubjectOutlinedIcon","CardSubscribeIcon","VisibilityOutlinedIcon","containerStyle","display","flexWrap","minWidth","height","alignItems","aligneContent","justifyContent","verticalAligne","overflow","CardStatistic","avatarPictStyle","bgcolor","red","transition","transform","UserAvatar","userName","Avatar","concat","userNameArr","CardAvatarSection","AvatarGroup","max","map","CardChip","chipText","chipStyle","normal","paragraph","colorName","followCursor","hover","noWrap","chipColor","colorNumber","boxStylehipContainer","flexDirection","chipStyleChipContainer","alignContent","marginX","boxStyleardChipContainer","minHeight","maxWidth","chipStyleCardChipContainer","chipStyleCreateNewChip","margin","CardChipContainer","value","labelId","TextareaCardName","styled","BaseTextareaAutosize","TextareaChkListText","mainContainer","position","cardMedia","typographyCardName","cursor","padding","typographyOnTheColumn","marginTop","icon","left","linkOnTheColumn","textDecoration","textDecorationColor","role","basicOperationsWithCard","avatarBox","cheepsBox","boxShadow","text","addIconButton","cardActionsMainContainer","cardActionsContainer","paddingX","cardSubscrContainer","cardComplContainer","Header","textAreaText","setTextAreaText","_Fragment","Style","ArticleOutlinedIcon","disabled","placeholder","onChange","target","checkListArr","id","isChecked","isSelected","Users","IconButton","GroupAddOutlinedIcon","Cheeps","index","size","AddOutlinedIcon","Actions","complited","setComplited","subscribed","setSubscribed","FormControlLabel","control","Switch","checked","inputProps","label","labelPlacement","Divider","orientation","Checkbox","TextEditor","style","ReactQuill","theme","modules","toolbar","list","indent","align","formats","content","console","log","Description","checkedRowsCounter","checkListItems","setProgress","newCheckListItems","forEach","element","length","progress","Math","round","ChkListCboxToggle","CheckboxID","setCheckListItems","ChkListTextEditToggle","type","IDofTheLastCreatedCheckListRow","addNewRowToCheckListTrig","setCheckListItemText","checkListItemText","setAddNewRowToCheckListTrig","isCancel","filter","el","HandleRemoveRowFromCheckList","HandleAddNewRowToCheckList","setIDofTheLastCreatedCheckListRow","newRowObj","Checklist","hideChecked","setHideChecked","useEffect","Button","LinearProgress","List","item","LabelID","ListItem","ListItemText","primary","defaultValue","autoFocus","required","AllSettingsOfCard","paddingLeft","className","paddingY","ChipContainer","setValue","ListItemButton","undefined","dense","edge","tabIndex","disableRipple","EditOutlinedIcon","ChangeChipsPallet","closeHandle","Card","CardHeader","titleTypographyProps","action","right","CloseOutlinedIcon","TextField","CardContent","disablePadding","CardActions","disableSpacing","ChangeUsers","subheader","ListSubheader","ListItemAvatar","marginLeft","Dates","getDayHandler","calendarValue","startDayChecked","completitionDayChecked","Calendar","selectRange","Period","startDayValue","completitionDayValue","getCompletitionTimeHandler","completitionTimeValue","getstartDayCheckedHandler","getcompletitionDayCheckedHandler","DateField","format","timezone","TimeField","ampm","clolr","Remainder","remainder","seRemainder","React","InputLabel","Select","MenuItem","DateAndTimeButtonsGroup","Date","DatesAndTimePallet","setCalendarValue","setStartDayValue","setCompletitiontDayValue","setCompletitiontTimeValue","setStartDayChecked","setCompletitionDayChecked","aligneItems","textAlign","buttonStyle","EditButtonsGroup","handleClickOpen","typePop","setTypePop","TaskCard","Stack","direction","spacing","pop","Pop","PaperComponent","props","Draggable","handle","cancel","Paper","borderTopLeftRadius","borderTopRightRadius","cardStyle","CardContentStyle","paddingTop","boxEditOutlinedIconStyle","top","showEditIcon","setShowEditIcon","openPop","setOpenPop","popupType","setPopupType","handleClose","Dialog","open","onClose","DialogTitle","background","flexFlow","DialogContent","overflowY","overflowX","msOverflowStyle","scrollbarWidth","Column","maxHeight","titletypographyprops","RecipeReviewCard","getWindowDimensions","innerWidth","innerHeight","window","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","BoardView","match","dispatch","useDispatch","userDataFromState","useSelector","userData","getBoard","accessToken"],"sourceRoot":""}