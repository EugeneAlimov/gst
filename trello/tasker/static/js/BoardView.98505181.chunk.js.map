{"version":3,"file":"static/js/BoardView.98505181.chunk.js","mappings":"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","sources":["libs/useWindowDimentions.js","Components/Card/CardImageSection/CardImage.jsx","Components/Card/CardDescriptionSection/CardDescription.jsx","Components/Card/CardStatisticIconsSection/CardCommentsIcon.jsx","constants/colorsConst.js","Components/Card/CardStatisticIconsSection/TaskTerminIcon.jsx","Components/Card/CardStatisticIconsSection/CardCheckListIcon.jsx","Components/Card/CardStatisticIconsSection/CardDescriptionIcon.jsx","Components/Card/CardStatisticIconsSection/CardSubscribeIcon.jsx","Components/Card/CardStatisticIconsSection/CardStatistic.jsx","Components/Card/Avatar/UserAvatar.jsx","Components/Card/Avatar/CardAvatarSection.jsx","Components/Card/CardChipsSection/CardChip.jsx","constants/chipContainerStyle.js","Components/Card/CardChipsSection/CardChipContainer.jsx","Components/Card/AllSettingsOfCard/styleConst.js","Components/Card/AllSettingsOfCard/Header.jsx","Components/Card/AllSettingsOfCard/constatns.js","Components/Card/AllSettingsOfCard/Usets.jsx","Components/Card/AllSettingsOfCard/Cheeps.jsx","Components/Card/AllSettingsOfCard/Actions.jsx","Components/UI/TextEditor.jsx","Components/Card/AllSettingsOfCard/Description.jsx","Components/Card/AllSettingsOfCard/methods.js","Components/Card/AllSettingsOfCard/Checklist.jsx","Components/Card/AllSettingsOfCard/AllSettingsOfCard.jsx","Components/ChangeChips/ChipContainer.jsx","Components/ChangeChips/ChangeChipsPallet.jsx","Components/Card/ChangeUsers/ChangeUsers.jsx","Components/DateAndTime/Calendar.jsx","Components/DateAndTime/Period.jsx","Components/DateAndTime/Reminder.jsx","Components/DateAndTime/DateAndTimeButtonsGroup.jsx","Components/DateAndTime/DatesAndTimePallet.jsx","Components/Card/EditButtonsGroup/EditButtonsGroup.jsx","Components/Card/TaskCard.jsx","Components/Column/Column.jsx","Views/ColumnsView.jsx","Views/BoardView.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\n\nconst getWindowDimensions = () => {\n    const { innerWidth: width, innerHeight: height } = window;\n    return [\n      width,\n      height\n    ]\n  }\n  \n   const useWindowDimensions = () => {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n  \n    useEffect(() => {\n      function handleResize() {\n        setWindowDimensions(getWindowDimensions());\n      }\n  \n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    }, []);\n  \n    return windowDimensions;\n  }\n  \n  export default useWindowDimensions","import React from \"react\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport img1 from \"../../../static/images/img1.png\";\n\nexport default function CardImage() {\n  return (\n    <CardMedia\n      sx={{ paddingBottom: \"4px\", zIndex: \"10\",}}\n      component=\"img\"\n      // image=\"https://slp-statics.astockcdn.net/static_assets/staging/24winter/home/curated-collections/card-2.jpg?width=580\"\n      image={img1}\n      alt=\"Paella dish\"\n    />\n  );\n}\n","import React from \"react\";\nimport Link from \"@mui/material/Link\";\nimport Typography from \"@mui/material/Typography\";\n\nconst preventDefault = (event) => event.preventDefault();\n\nexport default function CardDescription({ cardText }) {\n  return (\n    <Link href=\"#\" underline=\"none\" onClick={preventDefault} sx={{ marginBottom: \"6px\" }}>\n      <Typography\n        variant=\"caption\"\n        color=\"#172b4d\"\n        sx={{\n          width: \"100%\",\n          fontSize: \"14px\",\n          fontWeight: \"400\",\n          lineHeight: \"1.5\",\n        }}\n      >\n        {cardText}\n      </Typography>\n    </Link>\n  );\n}\n","import React from \"react\";\n\nimport Box from \"@mui/material/Box\";\nimport Icon from \"@mui/material/Icon\";\nimport Typography from \"@mui/material/Typography\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\nimport TextsmsOutlinedIcon from \"@mui/icons-material/TextsmsOutlined\";\nimport { useGetCommentsQuery } from \"../../../Redux/comments/comments-operations\";\nimport { List, ListItem } from \"@mui/material\";\n\nexport default function CardCommentsIcon({\n  boxStyle,\n  iconStyle,\n  typographyStyle,\n  comments_how_many,\n  cardId,\n}) {\n  const extTypographyStyle = { ...typographyStyle };\n  const { data: commentData } = useGetCommentsQuery(cardId);\n\n  return (\n    <Tooltip\n      title={\n        !!commentData && (\n          <List>\n            {commentData.map((comment) => {\n              const { id, text } = comment;\n              return (\n                <ListItem key={id} sx={{ paddingY: \"0px\" }}>\n                  <Typography variant=\"caption\" color=\"#fff\" sx={{ fontSize: \"14px\" }}>\n                    {\"- \"}\n                    {text}\n                  </Typography>\n                </ListItem>\n              );\n            })}\n          </List>\n        )\n      }\n      placement=\"bottom\"\n    >\n      <Box sx={boxStyle}>\n        <Typography variant=\"caption\" sx={{ lineHeight: \"1.3\" }}>\n          <Icon>\n            <TextsmsOutlinedIcon sx={iconStyle} />\n          </Icon>\n        </Typography>\n        <Typography variant=\"caption\" color=\"#172b4d\" sx={extTypographyStyle}>\n          {!!commentData ? commentData.length : 0}\n        </Typography>\n      </Box>\n    </Tooltip>\n  );\n}\n","export const chipColor = [\n  { normal: \"#baf3db\", hover: \"#7ee2b8\", colorNumber: \"1\", colorName: \"Приглушенный зеленый\" },\n  { normal: \"#f8e6a0\", hover: \"#f5cd47\", colorNumber: \"2\", colorName: \"Приглушенный желтый\" },\n  { normal: \"#fedec8\", hover: \"#fec195\", colorNumber: \"3\", colorName: \"Приглушенный оранжевый\" },\n  { normal: \"#ffd5d2\", hover: \"#fd9891\", colorNumber: \"4\", colorName: \"Приглушенный красный\" },\n  { normal: \"#dfd8fd\", hover: \"#b8acf6\", colorNumber: \"5\", colorName: \"Приглушенный фиолетовый\" },\n  { normal: \"#4bce97\", hover: \"#7ee2b8\", colorNumber: \"6\", colorName: \"Зелёный\" },\n  { normal: \"#f5cd47\", hover: \"#e2b203\", colorNumber: \"7\", colorName: \"Желтый\" },\n  { normal: \"#fea362\", hover: \"#fec195\", colorNumber: \"8\", colorName: \"Оранжевый\" },\n  { normal: \"#f87168\", hover: \"#fd9891\", colorNumber: \"9\", colorName: \"Красный\" },\n  { normal: \"#9f8fef\", hover: \"#b8acf6\", colorNumber: \"10\", colorName: \"Пурпурный\" },\n  { normal: \"#1f845a\", hover: \"#216e4e\", colorNumber: \"11\", colorName: \"Насыщенный зеленый\" },\n  { normal: \"#946f00\", hover: \"#7f5f01\", colorNumber: \"12\", colorName: \"Насыщенный желтый\" },\n  { normal: \"#c25100\", hover: \"#a54800\", colorNumber: \"13\", colorName: \"Насыщенный оранжевый\" },\n  { normal: \"#c9372c\", hover: \"#ae2e24\", colorNumber: \"14\", colorName: \"Красный\" },\n  { normal: \"#6e5dc6\", hover: \"#5e4db2\", colorNumber: \"15\", colorName: \"Пурпурный\" },\n  { normal: \"#cce0ff\", hover: \"#85b8ff\", colorNumber: \"16\", colorName: \"Приглушенный синий\" },\n  { normal: \"#c6edfb\", hover: \"#9dd9ee\", colorNumber: \"17\", colorName: \"Приглушенный голубой\" },\n  { normal: \"#d3f1a7\", hover: \"#b3df72\", colorNumber: \"18\", colorName: \"Приглушенный лаймовый\" },\n  { normal: \"#fdd0ec\", hover: \"#f797d2\", colorNumber: \"19\", colorName: \"Приглушенный розовый\" },\n  { normal: \"#dcdfe4\", hover: \"#85b8ff\", colorNumber: \"20\", colorName: \"Светло-серый\" },\n  { normal: \"#579dff\", hover: \"#9dd9ee\", colorNumber: \"21\", colorName: \"Синий\" },\n  { normal: \"#6cc3e0\", hover: \"#94c748\", colorNumber: \"22\", colorName: \"Небесный\" },\n  { normal: \"#94c748\", hover: \"#b3b9c4\", colorNumber: \"23\", colorName: \"Лаймовый\" },\n  { normal: \"#e774bb\", hover: \"#f797d2\", colorNumber: \"24\", colorName: \"Розовый\" },\n  { normal: \"#8590a2\", hover: \"#b3b9c4\", colorNumber: \"25\", colorName: \"Черный\" },\n  { normal: \"#0c66e4\", hover: \"#0055cc\", colorNumber: \"26\", colorName: \"Насыщенный синий\" },\n  { normal: \"#227d9b\", hover: \"#206a83\", colorNumber: \"27\", colorName: \"Насыщенный голубой\" },\n  { normal: \"#5b7f24\", hover: \"#4c6b1f\", colorNumber: \"28\", colorName: \"Насыщенный лаймовый\" },\n  { normal: \"#ae4787\", hover: \"#943d73\", colorNumber: \"29\", colorName: \"Насыщенный розовый\" },\n  { normal: \"#626f86\", hover: \"#44546f\", colorNumber: \"30\", colorName: \"Темно-серый\" },\n];\n","import React, { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Icon from \"@mui/material/Icon\";\nimport Typography from \"@mui/material/Typography\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport AccessTimeOutlinedIcon from \"@mui/icons-material/AccessTimeOutlined\";\n// import CircleOutlinedIcon from \"@mui/icons-material/CircleOutlined\";\n// import TaskAltOutlinedIcon from \"@mui/icons-material/TaskAltOutlined\";\nimport CancelOutlinedIcon from \"@mui/icons-material/CancelOutlined\";\nimport { format } from \"date-fns\";\nimport { chipColor } from \"../../../constants/colorsConst\";\n\nexport default function TaskTerminIcon({\n  boxStyle,\n  iconStyle,\n  typographyStyle,\n  date_time_finish,\n  date_time_start,\n  status,\n}) {\n  const [inBlock, setInBlock] = useState(false);\n  const dateTimeStartFormated = format(new Date(`${date_time_start}`), \"k:mm d MMM\");\n  const dateTimeFinishFormated = format(new Date(`${date_time_finish}`), \"k:mm d MMM\");\n\n  const color = (value) => {\n    let tempColor = 0;\n    switch (value) {\n      case 1:\n        tempColor = 6;\n        break;\n      case 3:\n        tempColor = 9;\n        break;\n      default:\n        tempColor = 0;\n        break;\n    }\n    return tempColor;\n  };\n\n  const extBoxStyle = {\n    ...boxStyle,\n    paddingRight: \"6px\",\n    borderRadius: \"6px\",\n    backgroundColor: chipColor[color(status)],//\"#ffd5d2\",\n    \"&:hover\": {\n      backgroundColor: \"#e7c8c6\",\n    },\n  };\n  const extIconStyle = { ...iconStyle, color: \"#953827\" };\n  const extTypographyStyle = { ...typographyStyle, color: \"#953827\" };\n\n  return (\n    <Tooltip title=\"Задание просрочено.\" placement=\"bottom\">\n      <Box\n        sx={{\n          ...extBoxStyle,\n        }}\n        onMouseOver={() => setInBlock(true)}\n        onMouseOut={() => setInBlock(false)}\n      >\n        <Typography variant=\"caption\" sx={{ lineHeight: \"1.3\" }}>\n          <Icon sx={{ marginRight: \"3px\" }}>\n            {inBlock ? (\n              <CancelOutlinedIcon sx={extIconStyle} />\n            ) : (\n              <AccessTimeOutlinedIcon sx={extIconStyle} />\n            )}\n          </Icon>\n        </Typography>\n        <Typography variant=\"caption\" color=\"#172b4d\" sx={extTypographyStyle}>\n          {dateTimeStartFormated} - {dateTimeFinishFormated}\n        </Typography>\n      </Box>\n    </Tooltip>\n  );\n}\n","import React, { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Icon from \"@mui/material/Icon\";\nimport Typography from \"@mui/material/Typography\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport { List, ListItem } from \"@mui/material\";\n\n// import CheckBoxOutlineBlankOutlinedIcon from \"@mui/icons-material/CheckBoxOutlineBlankOutlined\";\nimport CheckBoxOutlinedIcon from \"@mui/icons-material/CheckBoxOutlined\";\nimport { useGetChecklistQuery } from \"../../../Redux/checklist/checklist-operations\";\n\nexport default function CardCheckListIcon({ cardId, boxStyle, iconStyle, typographyStyle }) {\n  const { data: checklistData } = useGetChecklistQuery(cardId);\n\n  const getChecked = () => {\n    let checked = 0;\n    let total = 0;\n    if (checklistData) {\n      total = checklistData.length;\n      checklistData.forEach((element) => {\n        if (element.is_checked) {\n          checked += 1;\n        }\n      });\n    }\n\n    return { total, checked };\n  };\n\n  return (\n    <Tooltip\n      title={\n        !!checklistData && (\n          <List>\n            {checklistData.map((checklist) => {\n              const { id, text, is_checked } = checklist;\n              return (\n                is_checked && (\n                  <ListItem key={id} sx={{ paddingY: \"0px\" }}>\n                    <Typography variant=\"caption\" color=\"#fff\" sx={{ fontSize: \"14px\" }}>\n                      {\"- \"}\n                      {text}\n                    </Typography>\n                  </ListItem>\n                )\n              );\n            })}\n          </List>\n        )\n      }\n      placement=\"bottom\"\n    >\n      <Box sx={boxStyle}>\n        <Typography variant=\"caption\" sx={{ lineHeight: \"1.3\" }}>\n          <Icon>\n            <CheckBoxOutlinedIcon sx={iconStyle} />\n          </Icon>\n        </Typography>\n        <Typography variant=\"caption\" color=\"#172b4d\" sx={typographyStyle}>\n          {getChecked().checked}/{getChecked().total}\n        </Typography>\n      </Box>\n    </Tooltip>\n  );\n}\n","import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Icon from \"@mui/material/Icon\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Typography from \"@mui/material/Typography\";\n\nimport SubjectOutlinedIcon from \"@mui/icons-material/SubjectOutlined\";\n\nexport default function CardDescriptionIcon({ boxStyle, iconStyle, typographyStyle }) {\n  return (\n    <Box sx={boxStyle}>\n      <Tooltip\n        title=\"Эта карточка с описанием.\"\n        placement=\"bottom\"\n      >\n        <Typography sx={{ lineHeight: \"1.4\" }}>\n          <Icon>\n            <SubjectOutlinedIcon sx={iconStyle} />\n          </Icon>\n        </Typography>\n      </Tooltip>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Icon from \"@mui/material/Icon\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Typography from \"@mui/material/Typography\";\n\nimport VisibilityOutlinedIcon from \"@mui/icons-material/VisibilityOutlined\";\n\nexport default function CardSubscribeIcon({ boxStyle, iconStyle }) {\n  return (\n    <Tooltip title=\"Вы подписаны на эту катрочку.\" placement=\"bottom\">\n      <Box sx={boxStyle}>\n        <Typography sx={{ lineHeight: \"1.4\" }}>\n          <Icon>\n            <VisibilityOutlinedIcon sx={iconStyle} />\n          </Icon>\n        </Typography>\n      </Box>\n    </Tooltip>\n  );\n}\n","import React from \"react\";\nimport Box from \"@mui/material/Box\";\n\nimport CardCommentsIcon from \"./CardCommentsIcon\";\nimport TaskTerminIcon from \"./TaskTerminIcon\";\nimport CardCheckListIcon from \"./CardCheckListIcon\";\nimport CardDescriptionIcon from \"./CardDescriptionIcon\";\nimport CardSubscribeIcon from \"./CardSubscribeIcon\";\n\nconst containerStyle = {\n  display: \"flex\",\n  flexWrap: \"wrap\",\n  width: \"100%\",\n  paddingBottom: \"6px\",\n};\n\nconst boxStyle = {\n  minWidth: \"20px\",\n  height: \"20px\",\n  display: \"flex\",\n  alignItems: \"center\",\n  aligneContent: \"center\",\n  justifyContent: \"space-between\",\n  marginRight: \"6px\",\n  marginBottom: \"6px\",\n};\n\nconst typographyStyle = {\n  verticalAligne: \"top\",\n  overflow: \"visible\",\n  fontSize: \"12px\",\n  fontWeight: \"400\",\n  lineHeight: \"1.4\",\n};\n\nconst iconStyle = {\n  overflow: \"visible\",\n  fontSize: \"18px\",\n};\n\nexport default function CardStatistic({\n  cardId,\n  is_subscribed,\n  in_process,\n  comments_how_many,\n  is_have_description,\n  checklist_how_many,\n  date_time_finish,\n  date_time_start,\n  status\n}) {\n\n  return (\n    <Box sx={containerStyle}>\n      {in_process && (\n        <TaskTerminIcon\n          status={status}\n          date_time_finish={date_time_finish}\n          date_time_start={date_time_start}\n          boxStyle={boxStyle}\n          iconStyle={iconStyle}\n          typographyStyle={typographyStyle}\n        />\n      )}\n      {is_subscribed && (\n        <CardSubscribeIcon\n          is_subscribed={is_subscribed}\n          boxStyle={boxStyle}\n          iconStyle={iconStyle}\n        />\n      )}\n      {is_have_description > 0 && (\n        <CardDescriptionIcon\n          boxStyle={boxStyle}\n          iconStyle={iconStyle}\n          typographyStyle={typographyStyle}\n        />\n      )}\n      {comments_how_many > 0 && (\n        <CardCommentsIcon\n          cardId={cardId}\n          comments_how_many={comments_how_many}\n          boxStyle={boxStyle}\n          iconStyle={iconStyle}\n          typographyStyle={typographyStyle}\n        />\n      )}\n      {checklist_how_many > 0 && (\n        <CardCheckListIcon\n        cardId={cardId}\n          boxStyle={boxStyle}\n          iconStyle={iconStyle}\n          typographyStyle={typographyStyle}\n        />\n      )}\n    </Box>\n  );\n}\n","import React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport red from \"@mui/material/colors/red\";\n\nconst avatarPictStyle = {\n  width: \"28px\",\n  height: \"28px\",\n  marginRight: \"0px\",\n  bgcolor: red[500],\n  transition: \"all .2s ease-in-out\",\n  \"&:hover\": {\n    transform: \"scale(1.5)\",\n  },\n};\n\nexport default function UserAvatar({ userName }) {\n  return (\n    <Avatar sx={avatarPictStyle} aria-label={`${userName}-avatar-label`}>\n      {userName}\n    </Avatar>\n  );\n}\n","import React from \"react\";\nimport AvatarGroup from \"@mui/material/AvatarGroup\";\nimport UserAvatar from \"./UserAvatar\";\n\nconst userNameArr = [\"R\", \"B\", \"C\", \"T\", \"K\", \"S\", \"O\", \"W\", \"M\", \"X\", \"P\"];\nexport default function CardAvatarSection() {\n  return (\n    <AvatarGroup max={9}>\n      {userNameArr.map((userName) => {\n        return <UserAvatar key={userName} userName={userName} />;\n      })}\n    </AvatarGroup>\n  );\n}\n","import React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\n\r\nexport default function CardChip({ chipText, color, chipStyle }) {\r\n  const boxStyle = { ...chipStyle.boxStyle, backgroundColor: color.normal };\r\n  return (\r\n    <Tooltip\r\n      title={\r\n        <Typography\r\n          sx={{ ...chipStyle.typographyStyle, color: \"#fff\", width: \"300px\" }}\r\n          paragraph={true}\r\n        >\r\n          Цвет: {color.colorName}\r\n          <br />\r\n          {chipText}\r\n        </Typography>\r\n      }\r\n      followCursor\r\n      placement=\"bottom\"\r\n    >\r\n      <Box\r\n        sx={{\r\n          ...boxStyle,\r\n          \"&:hover\": {\r\n            backgroundColor: color.hover,\r\n            transform: \"scale(1.005)\",\r\n          },\r\n        }}\r\n      >\r\n        <Typography noWrap sx={{ ...chipStyle.typographyStyle }} variant=\"body1\">\r\n          {chipText}\r\n        </Typography>\r\n      </Box>\r\n    </Tooltip>\r\n  );\r\n}\r\n","export const boxStylehipContainer = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  alignItems: \"center\",\n  height: \"30px\",\n  marginBottom: \"7px\",\n};\n\nexport const chipStyleChipContainer = {\n  boxStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    alignContent: \"center\",\n    width: \"212px\",\n    height: \"32px\",\n    borderRadius: \"4px\",\n    transition: \"all .05s ease-in-out\",\n  },\n  typographyStyle: {\n    marginX: \"6px\",\n    fontSize: \"14px\",\n    fontWeight: \"400\",\n    color: \"#000\",\n  },\n};\n\nexport const boxStyleardChipContainer = {\n  display: \"flex\",\n  flexWrap: \"wrap\",\n  minHeight: \"24px\",\n  maxWidth: \"100%\",\n  paddingBottom: \"6px\",\n};\n\nexport const chipStyleCardChipContainer = {\n  boxStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    alignContent: \"center\",\n    minWidth: \"56px\",\n    marginRight: \"4px\",\n    marginBottom: \"5px\",\n    height: \"16px\",\n    borderRadius: \"4px\",\n    backgroundColor: \"#4bce97\",\n    transition: \"all .05s ease-in-out\",\n  },\n  typographyStyle: {\n    marginX: \"6px\",\n    fontSize: \"12px\",\n    fontWeight: \"400\",\n    color: \"#164b35\",\n  },\n};\n\nexport const chipStyleCreateNewChip = {\n  boxStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    alignContent: \"center\",\n    width: \"48px\",\n    height: \"32px\",\n    margin: \"2px\",\n    borderRadius: \"4px\",\n    transition: \"all .05s ease-in-out\",\n  },\n  typographyStyle: {\n    marginX: \"6px\",\n    fontSize: \"14px\",\n    fontWeight: \"400\",\n    color: \"#000\",\n  },\n};\n","import React from \"react\";\nimport Box from \"@mui/material/Box\";\n\nimport CardChip from \"./CardChip\";\n\nimport { chipColor } from \"../../../constants/colorsConst\";\nimport {\n  boxStyleardChipContainer,\n  chipStyleCardChipContainer,\n} from \"../../../constants/chipContainerStyle\";\n\nimport { useGetChipsQuery } from \"../../../Redux/chip/chip-operations\";\n\nexport default function CardChipContainer({ cardId }) {\n\n  const {data: chips} = useGetChipsQuery(cardId)\n  \n  return (\n    <Box sx={boxStyleardChipContainer}>\n      {\n      chips &&\n      chips.map((value) => {\n        const {color_number, text, id} = value\n      \n        const labelId = `checkbox-list-label-${value}`;\n\n        return (\n          <CardChip\n            key={id}\n            color={chipColor[color_number]}\n            labelId={labelId}\n            chipText={text}\n            chipStyle={chipStyleCardChipContainer}\n          />\n        );\n      })}\n    </Box>\n  );\n}\n","import { styled } from \"@mui/system\";\nimport { TextareaAutosize as BaseTextareaAutosize } from \"@mui/base/TextareaAutosize\";\n\nexport const TextareaCardName = styled(BaseTextareaAutosize)(\n  () => `\n    box-sizing: border-box;\n    width: 95%;\n    height: fit-content;\n    font-family: 'Roboto';\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 1.5;\n    padding: 0px 6px;\n    border-radius: 4px;\n    color: #172b4d;\n    background-color: #f5f5f5;\n  \n    border: 0px;\n    resize: none;\n    &:hover {\n      border-color: #3399FF;\n    }\n    \n   &:focus {\n      background: #fff;\n      outline: 0;\n      border-color: #3399FF;\n      box-shadow: 0 0 0 3px #b6daff;\n    }\n  \n    // firefox\n    &:focus-visible {\n      outline: 0;\n    }\n  `\n);\n\nexport const TextareaChkListText = styled(BaseTextareaAutosize)(\n  () => `\n    box-sizing: border-box;\n    width: 100%;\n    height: fit-content;\n    font-family: 'Roboto';\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 1.5;\n    padding: 0px 6px;\n    border-radius: 4px;\n    color: #172b4d;\n    background-color: #f5f5f5;\n  \n    border: 0px;\n    resize: none;\n    &:hover {\n      border-color: #3399FF;\n    }\n    \n      background: #fff;\n      outline: 0;\n      border-color: #3399FF;\n      box-shadow: 0 0 0 3px #b6daff;\n    }\n  \n      outline: 0;\n  `\n);\n\nexport const boxStyle = {\n  minWidth: \"20px\",\n  height: \"20px\",\n  display: \"flex\",\n  alignItems: \"center\",\n  aligneContent: \"center\",\n  justifyContent: \"space-between\",\n};\n\nexport const typographyStyle = {\n  verticalAligne: \"top\",\n  overflow: \"visible\",\n  fontSize: \"12px\",\n  fontWeight: \"400\",\n  lineHeight: \"1.4\",\n};\n\nexport const iconStyle = {\n  overflow: \"visible\",\n  fontSize: \"18px\",\n};\n\nexport const mainContainer = {\n  display: \"block\",\n  position: \"relative\",\n  width: \"768px\",\n  // borderRadius: \"20px\",\n  margin: \"0px\",\n  backgroundColor: \"#f5f5f5\",\n  // boxShadow: \"1\",\n  // marginY: \"20px\",\n  paddingRight:\"8px\",\n};\n\nexport const cardMedia = {\n  // maxHeight: \"120px\",\n  marginBottom: \"10px\",\n  // borderTopRightRadius: \"10px\",\n  // borderTopLeftRadius: \"10px\",\n};\nexport const typographyCardName = {\n  cursor: \"default\",\n  fontSize: \"20px\",\n  fontWeight: \"400\",\n  color: \"#172b4d\",\n  width: \"100%\",\n  padding: \"3px\",\n};\n\nexport const typographyOnTheColumn = {\n  marginTop: \"12px\",\n  cursor: \"default\",\n  fontSize: \"20px\",\n  color: \"#172b4d\",\n};\n\nexport const icon = {\n  marginTop: \"0px\",\n  position: \"absolute\",\n  left: \"20px\",\n};\n\nexport const linkOnTheColumn = {\n  textDecoration: \"underline\",\n  textDecorationColor: \"#172b4d\",\n  fontSize: \"16px\",\n  fontWeight: \"400\",\n  color: \"#172b4d\",\n  role: \"button\",\n  cursor: \"pointer\",\n};\n\nexport const basicOperationsWithCard = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  flexWrap: \"nowrap\",\n  alignItems: \"flex-start\",\n  width: \"478px\",\n};\n\nexport const avatarBox = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  alignItems: \"center\",\n  justifyContent: \"flex-start\",\n  width: \"100%\",\n};\n\nexport const cheepsBox = {\n  marginBottom: \"15px\",\n  width: \"478px\", //\"100%\",\n  backgroundColor: \"#e1e1e14f\",\n  borderRadius: \"4px\",\n  boxShadow: \"1\",\n  padding: \"5px\",\n};\n\nexport const text = {\n  cursor: \"default\",\n  fontSize: \"20px\",\n  color: \"#172b4d\",\n  width: \"100%\",\n  padding: \"3px\",\n};\n\nexport const addIconButton = {\n  margin: \"2px\",\n  width: \"48px\",\n  height: \"32px\",\n  borderRadius: \"4px\",\n  transition: \"all .05s ease-in-out\",\n  backgroundColor: \"#c1c1c18a\",\n  \"&:hover\": {\n    backgroundColor: \"#9b99998a\",\n    transform: \"scale(1.005)\",\n  },\n};\n\nexport const cardActionsMainContainer = {\n  marginBottom: \"15px\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  flexWrap: \"nowrap\",\n  width: \"350px\",\n  backgroundColor: \"#f5f5f5\",\n  borderRadius: \"4px\",\n  padding: \"5px\",\n};\n\nexport const cardActionsContainer = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"flex-start\",\n  width: \"100%\",\n  marginBottom: \"15px\",\n  borderRadius: \"3px\",\n  paddingX: \"10px\",\n  paddingBottom: \"10px\",\n  boxShadow: \"1\",\n};\n\nexport const cardSubscrContainer = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  alignItems: \"center\",\n  justifyContent: \"flex-start\",\n  width: \"100%\",\n  borderRadius: \"3px\",\n};\n\nexport const cardComplContainer = {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    width: \"100%\",\n    borderRadius: \"3px\",\n    paddingX: \"10px\",\n    paddingBottom: \"10px\",\n    boxShadow: \"1\",\n}","import React, {useState} from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Link from \"@mui/material/Link\";\nimport Icon from \"@mui/material/Icon\";\n\nimport ArticleOutlinedIcon from \"@mui/icons-material/ArticleOutlined\";\n\nimport * as Style from \"./styleConst\";\n\nimport { TextareaCardName } from \"./styleConst\";\n\n\nexport default function Header() {\n    const [textAreaText, setTextAreaText] = useState(\"\");\n\n  return (\n    <>\n      <Typography sx={Style.typographyCardName}>Название карточки</Typography>\n      <Icon sx={Style.icon}>\n        <ArticleOutlinedIcon />\n      </Icon>\n      <TextareaCardName\n        disabled={false}\n        aria-label=\"empty textarea\"\n        placeholder=\"Здесь нужно указать имя карточки\"\n        value={textAreaText}\n        onChange={(event) => {\n          setTextAreaText(event.target.value);\n        }}\n      />\n      <Typography sx={Style.typographyOnTheColumn}>\n        В колонке:{\" \"}\n        <Link href=\"#\" sx={Style.linkOnTheColumn}>\n          В работе\n        </Link>\n      </Typography>\n    </>\n  );\n}\n","export const userNameArr = [\n  \"R\",\n  \"B\",\n  \"C\",\n  \"T\",\n  \"K\",\n  \"S\",\n  \"O\",\n  \"W\",\n  \"M\",\n  \"X\",\n  \"P\",\n  \"A\",\n  \"G\",\n  \"Z\",\n  \"Y\",\n  \"D\",\n  \"V\",\n  \"N\",\n  \"F\",\n  \"B\",\n  \"Й\",\n  \"У\",\n];\n\nexport const checkListArr = [\n  {\n    id: 1,\n    isChecked: false,\n    text: \"\",\n    isSelected: false,\n  },\n  // {\n  //   id: 4,\n  //   isChecked: false,\n  //   text: \"\",\n  //   isSelected: false,\n  // },\n  // {\n  //   id: 5,\n  //   isChecked: false,\n  //   text: \"\",\n  //   isSelected: false,\n  // },\n];\n","import React from \"react\";\n\n//import MUI components\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport AvatarGroup from \"@mui/material/AvatarGroup\";\nimport IconButton from \"@mui/material/IconButton\";\n\n//import application components\nimport UserAvatar from \"../Avatar/UserAvatar\";\n\n//import constants\nimport { userNameArr } from \"./constatns\";\n\n//import MUI icons\nimport GroupAddOutlinedIcon from \"@mui/icons-material/GroupAddOutlined\";\n\n//import styles\nimport * as Style from \"./styleConst\";\n\nexport default function Users() {\n  return (\n    <Box sx={{ marginBottom: \"15px\" }}>\n      <Typography sx={{ cursor: \"default\", fontSize: \"20px\", color: \"#172b4d\", width: \"100%\" }}>\n        Участники\n      </Typography>\n      <Box sx={Style.avatarBox}>\n        <AvatarGroup max={15}>\n          {userNameArr.map((userName) => {\n            return <UserAvatar key={userName} userName={userName} />;\n          })}\n        </AvatarGroup>\n        <IconButton>\n          <GroupAddOutlinedIcon />\n        </IconButton>\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\n\n//import MUI components\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\n\n//import application components\nimport CardChip from \"../CardChipsSection/CardChip\";\n\n//import MUI icons\nimport AddOutlinedIcon from \"@mui/icons-material/AddOutlined\";\n\n//import styles\nimport * as Style from \"./styleConst\";\nimport { chipColor } from \"../../../constants/colorsConst\";\nimport { chipStyleCreateNewChip } from \"../../../constants/chipContainerStyle\";\n\nexport default function Cheeps() {\n  return (\n    <Box sx={Style.cheepsBox}>\n      <Typography sx={Style.text}>Метки</Typography>\n      <Box sx={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\" }}>\n        {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17].map((index) => {\n          const labelId = `checkbox-list-label-${index}`;\n          return (\n            <CardChip\n              key={index}\n              color={chipColor[index]}\n              labelId={labelId}\n              chipStyle={chipStyleCreateNewChip}\n            />\n          );\n        })}\n        <IconButton size=\"small\" sx={Style.addIconButton}>\n          <AddOutlinedIcon />\n        </IconButton>\n      </Box>\n    </Box>\n  );\n}\n","import React, { useState } from \"react\";\n\n//import MUI components\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Divider from \"@mui/material/Divider\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Switch from \"@mui/material/Switch\";\n\n//import application components\nimport TaskTerminIcon from \"../CardStatisticIconsSection/TaskTerminIcon\";\n\n//import styles\nimport * as Style from \"./styleConst\";\n\nexport default function Actions({ date_time_finish, date_time_start, status }) {\n  const [complited, setComplited] = useState(false);\n  const [subscribed, setSubscribed] = useState(false);\n\n  const handleComplitedChange = (event) => {\n    setComplited(event.target.checked);\n  };\n\n  const handleSubscribeChange = (event) => {\n    setSubscribed(event.target.checked);\n  };\n\n  return (\n    <Box sx={Style.cardActionsMainContainer}>\n      <Typography sx={Style.text}>Действия с карточкой:</Typography>\n      <Box sx={Style.cardActionsContainer}>\n        <Box sx={Style.cardSubscrContainer}>\n          <FormControlLabel\n            sx={{ marginX: \"0px\", width: \"284px\", justifyContent: \"space-between\" }}\n            value=\"top\"\n            control={\n              <Switch\n                checked={subscribed}\n                onChange={handleSubscribeChange}\n                inputProps={{ \"aria-label\": \"controlled\" }}\n              />\n            }\n            label={\n              <Typography sx={{ cursor: \"pointer\", fontSize: \"14px\", color: \"#172b4d\" }}>\n                Подписаться на уведомления\n              </Typography>\n            }\n            labelPlacement=\"start\"\n          />\n        </Box>\n        <Box sx={Style.cardSubscrContainer}>\n          <Typography\n            sx={{\n              cursor: \"default\",\n              fontSize: \"14px\",\n              color: \"#172b4d\",\n              marginRight: \"10px\",\n            }}\n          >\n            Статус задания:\n          </Typography>\n          <TaskTerminIcon\n            status={status}\n            date_time_finish={date_time_finish}\n            date_time_start={date_time_start}\n            boxStyle={Style.boxStyle}\n            iconStyle={Style.iconStyle}\n            typographyStyle={Style.typographyStyle}\n          />\n        </Box>\n      </Box>\n      <Divider orientation=\"horizontal\" variant=\"middle\" sx={{ marginBottom: \"15px\" }} />\n      <Box sx={Style.cardComplContainer}>\n        <FormControlLabel\n          sx={{ marginX: \"0px\", width: \"284px\", justifyContent: \"space-between\" }}\n          value=\"top\"\n          control={\n            <Checkbox\n              checked={complited}\n              onChange={handleComplitedChange}\n              inputProps={{ \"aria-label\": \"controlled\" }}\n            />\n          }\n          label={\n            <Typography\n              sx={{\n                cursor: \"pointer\",\n                fontSize: \"14px\",\n                color: \"#172b4d\",\n                marginRight: \"10px\",\n              }}\n            >\n              Поставить отметку о выполнении\n            </Typography>\n          }\n          labelPlacement=\"start\"\n        />\n        <Typography\n          sx={{\n            cursor: \"default\",\n            fontSize: \"14px\",\n            color: \"#172b4d\",\n            backgroundColor: \"#ffd5d2\",\n            paddingX: \"5px\",\n            borderRadius: \"4px\",\n          }}\n        >\n          Выполнено с опозданием\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport \"quill/dist/quill.snow.css\";\nimport ReactQuill from \"react-quill\";\nimport { Box } from \"@mui/material\";\n\nexport default function TextEditor() {\n  var modules = {\n    toolbar: [\n      [{ size: [\"small\", false, \"large\", \"huge\"] }],\n      [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\n      [{ list: \"ordered\" }, { list: \"bullet\" }],\n      [\"link\", \"image\"],\n      [{ list: \"ordered\" }, { list: \"bullet\" }, { indent: \"-1\" }, { indent: \"+1\" }, { align: [] }],\n      [\n        {\n          color: [\n            \"#000000\",\n            \"#e60000\",\n            \"#ff9900\",\n            \"#ffff00\",\n            \"#008a00\",\n            \"#0066cc\",\n            \"#9933ff\",\n            \"#ffffff\",\n            \"#facccc\",\n            \"#ffebcc\",\n            \"#ffffcc\",\n            \"#cce8cc\",\n            \"#cce0f5\",\n            \"#ebd6ff\",\n            \"#bbbbbb\",\n            \"#f06666\",\n            \"#ffc266\",\n            \"#ffff66\",\n            \"#66b966\",\n            \"#66a3e0\",\n            \"#c285ff\",\n            \"#888888\",\n            \"#a10000\",\n            \"#b26b00\",\n            \"#b2b200\",\n            \"#006100\",\n            \"#0047b2\",\n            \"#6b24b2\",\n            \"#444444\",\n            \"#5c0000\",\n            \"#663d00\",\n            \"#666600\",\n            \"#003700\",\n            \"#002966\",\n            \"#3d1466\",\n            \"custom-color\",\n          ],\n        },\n      ],\n    ],\n  };\n\n  var formats = [\n    \"header\",\n    \"height\",\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"strike\",\n    \"blockquote\",\n    \"list\",\n    \"color\",\n    \"bullet\",\n    \"indent\",\n    \"link\",\n    \"image\",\n    \"align\",\n    \"size\",\n  ];\n\n  const handleProcedureContentChange = (content) => {\n    console.log(\"content---->\", content);\n  };\n\n  return (\n    <Box\n      sx={{\n        borderRadius: \"4px\",\n        boxShadow: \"1\",\n      }}\n    >\n      <div style={{ display: \"grid\", justifyContent: \"center\" }}>\n        <ReactQuill\n          theme=\"snow\"\n          modules={modules}\n          formats={formats}\n          placeholder=\"write your content ....\"\n          onChange={handleProcedureContentChange}\n          style={{ height: \"fit-content\" }}\n        ></ReactQuill>\n      </div>\n    </Box>\n  );\n}\n","import React from \"react\";\n\n//import MUI components\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\n\n//import application components\nimport TextEditor from \"../../UI/TextEditor\";\n\nexport default function Description() {\n  return (\n    <Box\n      sx={{\n        marginBottom: \"15px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        flexWrap: \"nowrap\",\n        width: \"100%\",\n        backgroundColor: \"#f5f5f5\",\n        borderRadius: \"4px\",\n        padding: \"5px\",\n      }}\n    >\n      <Typography\n        sx={{\n          cursor: \"default\",\n          fontSize: \"20px\",\n          color: \"#172b4d\",\n          width: \"100%\",\n          padding: \"3px\",\n          marginTop: \"15px\",\n        }}\n      >\n        Описание карточки\n      </Typography>\n      <TextEditor />\n    </Box>\n  );\n}\n","export function checkedRowsCounter(checkListItems, setProgress) {\n  const newCheckListItems = [...checkListItems];\n  let checked = 0;\n\n  newCheckListItems.forEach((element) => {\n    if (element.isChecked) {\n      checked += 1;\n    }\n  });\n\n  let length = checkListItems.length;\n  let progress = Math.round((100 / length) * checked);\n\n  if (!!!length) {\n    progress = 0;\n  }\n\n  setProgress(progress);\n}\n\nexport const ChkListCboxToggle =\n  (CheckboxID, checkListItems, setProgress, setCheckListItems) => () => {\n    const newCheckListItems = [...checkListItems];\n\n    newCheckListItems.forEach((element) => {\n      if (element.id === CheckboxID) {\n        element.isChecked = !element.isChecked;\n      }\n    });\n\n    checkedRowsCounter(checkListItems, setProgress, CheckboxID);\n    setCheckListItems(checkListItems);\n  };\n\nexport const ChkListTextEditToggle =\n  (\n    CheckboxID,\n    type,\n    IDofTheLastCreatedCheckListRow,\n    addNewRowToCheckListTrig,\n    checkListItems,\n    setCheckListItemText,\n    checkListItemText,\n    setCheckListItems,\n    setAddNewRowToCheckListTrig\n  ) =>\n  () => {\n    let newCheckListItems = [...checkListItems];\n    let isCancel = false;\n\n    newCheckListItems.forEach((element) => {\n      switch (type) {\n        case \"open\":\n          element.isSelected = false;\n          if (element.id === CheckboxID) {\n            element.isSelected = true;\n          }\n          break;\n\n        case \"cancel\":\n          element.isSelected = false;\n          isCancel = true;\n          setAddNewRowToCheckListTrig(false);\n\n          break;\n\n        case \"save\":\n          if (checkListItemText.length > 0) {\n            element.isSelected = false;\n\n            if (element.id === CheckboxID) {\n              element.text = checkListItemText;\n            }\n            setCheckListItemText(\"\");\n\n            if (addNewRowToCheckListTrig) {\n              setAddNewRowToCheckListTrig(false);\n            }\n          }\n          setCheckListItemText(\"\");\n\n          break;\n\n        default:\n          break;\n      }\n    });\n\n    if (isCancel) {\n      const newArr = checkListItems.filter((el) => el.id !== IDofTheLastCreatedCheckListRow);\n      newCheckListItems = [...newArr];\n      setCheckListItemText(\"\");\n    }\n    isCancel = false;\n\n    setCheckListItems(newCheckListItems);\n  };\n\nexport const HandleRemoveRowFromCheckList = (CheckboxID, checkListItems, setCheckListItems) => {\n  const newCheckListItems = checkListItems.filter((el) => el.id !== CheckboxID);\n\n  setCheckListItems(newCheckListItems);\n};\n\nexport const HandleAddNewRowToCheckList = (\n  setIDofTheLastCreatedCheckListRow,\n  setAddNewRowToCheckListTrig,\n  setCheckListItems,\n  checkListItems\n) => {\n  const checkListArrLength = checkListItems.length;\n  const IDofTheLastCreatedCheckListRow = checkListArrLength + 1;\n\n  const newRowObj = {\n    id: IDofTheLastCreatedCheckListRow,\n    isChecked: false,\n    text: \"\",\n    isSelected: true,\n  };\n\n  setIDofTheLastCreatedCheckListRow(IDofTheLastCreatedCheckListRow);\n  setAddNewRowToCheckListTrig(true);\n  setCheckListItems([...checkListItems, newRowObj]);\n};\n\nexport const handleComplitedChange = (event, setComplited) => {\n  setComplited(event.target.checked);\n};\n","import React, { useState, useEffect } from \"react\";\n\n//import MUI components\nimport Box from \"@mui/material/Box\";\nimport Icon from \"@mui/material/Icon\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Switch from \"@mui/material/Switch\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\n\n//import MUI icons\nimport CheckBoxOutlinedIcon from \"@mui/icons-material/CheckBoxOutlined\";\n\n//import mettods\nimport {\n  checkedRowsCounter,\n  ChkListCboxToggle,\n  ChkListTextEditToggle,\n  HandleRemoveRowFromCheckList,\n  HandleAddNewRowToCheckList,\n} from \"./methods\";\n\n//import styles\n// import * as Style from \"./styleConst\";\nimport { TextareaChkListText } from \"./styleConst\";\n\n//import constants\nimport { checkListArr } from \"./constatns\";\n\nexport default function Checklist() {\n  const [hideChecked, setHideChecked] = useState(false);\n  const [addNewRowToCheckListTrig, setAddNewRowToCheckListTrig] = useState(false);\n  const [checkListItems, setCheckListItems] = useState(checkListArr);\n  const [checkListItemText, setCheckListItemText] = useState(\"\");\n  const [progress, setProgress] = useState(0);\n  const [IDofTheLastCreatedCheckListRow, setIDofTheLastCreatedCheckListRow] = useState(0);\n\n  useEffect(() => {\n    console.log(\"dsadasd\");\n    checkedRowsCounter(checkListItems, setProgress);\n  }, [checkListItems]);\n\n  const handleHideCheckedChange = (event) => {\n    setHideChecked(event.target.checked);\n  };\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        flexWrap: \"nowrap\",\n        width: \"100%\",\n        backgroundColor: \"#f5f5f5\",\n        borderRadius: \"4px\",\n        padding: \"5px\",\n      }}\n    >\n      {/* чекбоксы */}\n      <Icon\n        sx={{\n          marginTop: \"4px\",\n          position: \"absolute\",\n          left: \"20px\",\n        }}\n      >\n        <CheckBoxOutlinedIcon />\n      </Icon>\n      <Typography\n        sx={{\n          cursor: \"default\",\n          fontSize: \"20px\",\n          color: \"#172b4d\",\n          width: \"100px\",\n          padding: \"3px\",\n        }}\n      >\n        Чек-лист\n      </Typography>\n\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          alignItems: \"center\",\n          justifyContent: \"flex-start\",\n          width: \"350px\",\n          borderRadius: \"3px\",\n          paddingX: \"10px\",\n          paddingBottom: \"5px\",\n          marginBottom: \"15px\",\n          boxShadow: \"1\",\n        }}\n      >\n        <FormControlLabel\n          sx={{\n            width: \"284px\",\n            justifyContent: \"space-between\",\n            marginBottom: \"4px\",\n          }}\n          value=\"top\"\n          control={\n            <Switch\n              checked={hideChecked}\n              onChange={handleHideCheckedChange}\n              inputProps={{ \"aria-label\": \"controlled\" }}\n            />\n          }\n          label={\n            <Typography\n              sx={{\n                cursor: \"pointer\",\n                fontSize: \"14px\",\n                color: \"#172b4d\",\n              }}\n            >\n              Скрывать отмеченные пункты\n            </Typography>\n          }\n          labelPlacement=\"start\"\n        />\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"large\"\n          sx={{\n            width: \"240px\",\n            height: \"32px\",\n            fontSize: \"14px\",\n            marginBottom: \"10px\",\n            backgroundColor: \"#d7d7d7\",\n            color: \"black\",\n            \"&:hover\": {\n              backgroundColor: \"#e3e3e3\",\n            },\n          }}\n        >\n          Удалить чек-лист\n        </Button>\n      </Box>\n\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          flexWrap: \"nowrap\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          width: \"100%\",\n        }}\n      >\n        <LinearProgress variant=\"determinate\" value={progress} sx={{ width: \"90%\" }} />\n        <Typography\n          sx={{\n            cursor: \"default\",\n            fontSize: \"14px\",\n            color: \"#172b4d\",\n            marginRight: \"10px\",\n          }}\n        >\n          {progress}%\n        </Typography>\n      </Box>\n      <List>\n        {checkListItems.map((item) => {\n          const LabelID = `checkbox-list-label-${item.id}`;\n\n          return (\n            <ListItem\n              sx={{\n                display: item.isChecked && hideChecked ? \"none\" : \"flex\",\n                padding: \"0px\",\n                margin: \"0px\",\n              }}\n              key={item.id}\n            >\n              <Checkbox\n                disabled={item.isSelected}\n                checked={item.isChecked}\n                onChange={ChkListCboxToggle(\n                  item.id,\n                  checkListItems,\n                  setProgress,\n                  setCheckListItems\n                )}\n                inputProps={{ \"aria-labelledby\": LabelID }}\n              />\n              <ListItemText\n                id={LabelID}\n                primary={\n                  item.isSelected ? (\n                    <Box\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        flexWrap: \"nowrap\",\n                        padding: \"6px\",\n                        boxShadow: \"1\",\n                        borderRadius: \"4px\",\n                      }}\n                    >\n                      <TextareaChkListText\n                        defaultValue={item.text}\n                        autoFocus\n                        disabled={false}\n                        aria-label={`${LabelID}`}\n                        placeholder=\"Это поле нужно заполнить\"\n                        required\n                        value={checkListItemText}\n                        onChange={(event) => {\n                          setCheckListItemText(event.target.value);\n                        }}\n                      />\n                      <Box\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                          flexWrap: \"nowrap\",\n                          alignContent: \"center\",\n                          alignItems: \"center\",\n                          marginTop: \"6px\",\n                          justifyContent: \"space-between\",\n                        }}\n                      >\n                        <Box\n                          sx={{\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                            flexWrap: \"nowrap\",\n                            alignContent: \"center\",\n                            alignItems: \"center\",\n                            marginTop: \"6px\",\n                          }}\n                        >\n                          <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            size=\"large\"\n                            sx={{\n                              width: \"110px\",\n                              height: \"26px\",\n                              marginTop: \"4px\",\n                              marginRight: \"10px\",\n                            }}\n                            onClick={ChkListTextEditToggle(\n                              item.id,\n                              \"save\",\n                              IDofTheLastCreatedCheckListRow,\n                              addNewRowToCheckListTrig,\n                              checkListItems,\n                              setCheckListItemText,\n                              checkListItemText,\n                              setCheckListItems,\n                              setAddNewRowToCheckListTrig\n                            )}\n                          >\n                            Сохранить\n                          </Button>\n                          <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            size=\"large\"\n                            sx={{\n                              width: \"90px\",\n                              height: \"26px\",\n                              marginTop: \"4px\",\n                              marginRight: \"10px\",\n                            }}\n                            onClick={ChkListTextEditToggle(\n                              item.id,\n                              \"cancel\",\n                              IDofTheLastCreatedCheckListRow,\n                              addNewRowToCheckListTrig,\n                              checkListItems,\n                              setCheckListItemText,\n                              checkListItemText,\n                              setCheckListItems,\n                              setAddNewRowToCheckListTrig\n                            )}\n                          >\n                            Отмена\n                          </Button>\n                        </Box>\n                        <Button\n                          variant=\"contained\"\n                          color=\"secondary\"\n                          size=\"large\"\n                          sx={{\n                            display: addNewRowToCheckListTrig ? \"none\" : \"inherit\",\n                            width: \"90px\",\n                            height: \"26px\",\n                            fontSize: \"14px\",\n                            marginTop: \"10px\",\n                            backgroundColor: \"#d7d7d7\",\n                            color: \"black\",\n                            \"&:hover\": {\n                              backgroundColor: \"#e3e3e3\",\n                            },\n                          }}\n                          onClick={() =>\n                            HandleRemoveRowFromCheckList(item.id, checkListItems, setCheckListItems)\n                          }\n                        >\n                          Удалить\n                        </Button>\n                      </Box>\n                    </Box>\n                  ) : (\n                    <Box\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        flexWrap: \"nowrap\",\n                        alignContent: \"center\",\n                        alignItems: \"center\",\n                        paddingX: \"6px\",\n                        borderRadius: \"6px\",\n                        width: \"100%\",\n                        minHeight: \"36px\",\n                        \"&:hover\": { backgroundColor: \"#e1e1e1\" },\n                      }}\n                      onClick={ChkListTextEditToggle(\n                        item.id,\n                        \"open\",\n                        IDofTheLastCreatedCheckListRow,\n                        addNewRowToCheckListTrig,\n                        checkListItems,\n                        setCheckListItemText,\n                        checkListItemText,\n                        setCheckListItems,\n                        setAddNewRowToCheckListTrig\n                      )}\n                    >\n                      <Typography\n                        sx={{\n                          cursor: \"pointer\",\n                          fontSize: \"14px\",\n                          color: item.isChecked ? \"#525863\" : \"#172b4d\",\n                          textDecoration: item.isChecked && \"line-through\",\n                        }}\n                      >\n                        {item.text}\n                      </Typography>\n                    </Box>\n                  )\n                }\n              />\n            </ListItem>\n          );\n        })}\n      </List>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        size=\"large\"\n        sx={{\n          display: addNewRowToCheckListTrig ? \"none\" : \"inherit\",\n          width: \"290px\",\n          height: \"32px\",\n          fontSize: \"14px\",\n          lineHeight: \"1.5\",\n          marginBottom: \"10px\",\n          backgroundColor: \"#d7d7d7\",\n          color: \"black\",\n          \"&:hover\": {\n            backgroundColor: \"#e3e3e3\",\n          },\n        }}\n        onClick={() =>\n          HandleAddNewRowToCheckList(\n            setIDofTheLastCreatedCheckListRow,\n            setAddNewRowToCheckListTrig,\n            setCheckListItems,\n            checkListItems\n          )\n        }\n      >\n        Добавить еще один пункт\n      </Button>\n    </Box>\n  );\n}\n","import React from \"react\";\n\n//import MUI components\nimport Box from \"@mui/material/Box\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\n\n//import application components\nimport Header from \"./Header\";\nimport Users from \"./Usets\";\n\n//import static\nimport img1 from \"../../../static/images/img1.png\";\n\n//import styles\nimport * as Style from \"./styleConst\";\n\nimport Cheeps from \"./Cheeps\";\nimport Actions from \"./Actions\";\nimport Description from \"./Description\";\nimport Checklist from \"./Checklist\";\n\nexport default function AllSettingsOfCard({ date_time_finish, date_time_start, status }) {\n\n  return (\n    <Box sx={Style.mainContainer}>\n      <CardMedia\n        sx={Style.cardMedia}\n        component=\"img\"\n        //   image=\"https://slp-statics.astockcdn.net/static_assets/staging/24winter/home/curated-collections/card-2.jpg?width=580\"\n        image={img1}\n        alt=\"Paella dish\"\n      />\n      <Box>\n        <Box sx={{ paddingLeft: \"55px\", marginBottom: \"20px\" }}>\n          <Header />\n          <Box\n            sx={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              width: \"100%\",\n            }}\n          >\n            <Box className=\"main-action-container-in-the-card\" sx={{ marginTop: \"25px\" }}>\n              <Box className=\"basic-operations-with-card\" sx={Style.basicOperationsWithCard}>\n                <Users />\n                <Cheeps />\n                <Actions\n                  date_time_finish={date_time_finish}\n                  date_time_start={date_time_start}\n                  status={status}\n                />\n                <Description />\n                <Checklist />\n              </Box>\n            </Box>\n            <Box\n              sx={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                flexWrap: \"nowrap\",\n                width: \"100%\",\n                alignItems: \"center\",\n                alignContent: \"center\",\n                marginTop: \"50px\",\n              }}\n            >\n              <Typography\n                sx={{\n                  cursor: \"pointer\",\n                  fontSize: \"16px\",\n                }}\n              >\n                Добавить на карточку\n              </Typography>\n              <Box\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  flexWrap: \"nowrap\",\n                  paddingY: \"16px\",\n                }}\n              >\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  size=\"large\"\n                  sx={{\n                    width: \"176px\",\n                    height: \"32px\",\n                    fontSize: \"14px\",\n                    lineHeight: \"1.5\",\n                    marginBottom: \"10px\",\n                    backgroundColor: \"#d7d7d7\",\n                    color: \"black\",\n                    \"&:hover\": {\n                      backgroundColor: \"#e3e3e3\",\n                    },\n                  }}\n                  // onClick={HandleAddNewRowToCheckList}\n                >\n                  Метки\n                </Button>\n\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  size=\"large\"\n                  sx={{\n                    width: \"176px\",\n                    height: \"32px\",\n                    fontSize: \"14px\",\n                    lineHeight: \"1.5\",\n                    marginBottom: \"10px\",\n                    backgroundColor: \"#d7d7d7\",\n                    color: \"black\",\n                    \"&:hover\": {\n                      backgroundColor: \"#e3e3e3\",\n                    },\n                  }}\n                  // onClick={HandleAddNewRowToCheckList}\n                >\n                  Чек-лист\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  size=\"large\"\n                  sx={{\n                    width: \"176px\",\n                    height: \"32px\",\n                    fontSize: \"14px\",\n                    lineHeight: \"1.5\",\n                    marginBottom: \"10px\",\n                    backgroundColor: \"#d7d7d7\",\n                    color: \"black\",\n                    \"&:hover\": {\n                      backgroundColor: \"#e3e3e3\",\n                    },\n                  }}\n                  // onClick={HandleAddNewRowToCheckList}\n                >\n                  Даты\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  size=\"large\"\n                  sx={{\n                    width: \"176px\",\n                    height: \"32px\",\n                    fontSize: \"14px\",\n                    lineHeight: \"1.5\",\n                    marginBottom: \"10px\",\n                    backgroundColor: \"#d7d7d7\",\n                    color: \"black\",\n                    \"&:hover\": {\n                      backgroundColor: \"#e3e3e3\",\n                    },\n                  }}\n                  // onClick={HandleAddNewRowToCheckList}\n                >\n                  Вложения\n                </Button>\n              </Box>\n            </Box>\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n","import React, { useState } from \"react\";\nimport CardChip from \"../Card/CardChipsSection/CardChip\";\nimport Box from \"@mui/material/Box\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport EditOutlinedIcon from \"@mui/icons-material/EditOutlined\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\n\nimport { boxStylehipContainer, chipStyleChipContainer } from \"../../constants/chipContainerStyle\";\n\nexport default function ChipContainer({ color, labelId }) {\n  const [value, setValue] = useState(false);\n  return (\n    <Box sx={boxStylehipContainer}>\n      <ListItemButton\n        onClick={() => setValue(!value)}\n        sx={{\n          padding: \"0px\",\n          height: \"32px\",\n          \"&:hover\": {\n            backgroundColor: \"rgba(0, 0, 0, 0)\",\n          },\n        }}\n        role={undefined}\n        dense\n      >\n        <Checkbox\n          edge=\"start\"\n          tabIndex={-1}\n          disableRipple\n          inputProps={{ \"aria-labelledby\": labelId }}\n          checked={value}\n        />\n        <CardChip color={color} chipStyle={chipStyleChipContainer} />\n      </ListItemButton>\n      <IconButton aria-label=\"settings\">\n        <EditOutlinedIcon sx={{ fontSize: \"18px\" }} />\n      </IconButton>\n    </Box>\n  );\n}\n","import React from \"react\";\n\n//import MUI components\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport TextField from \"@mui/material/TextField\";\nimport CardActions from \"@mui/material/CardActions\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseOutlinedIcon from \"@mui/icons-material/CloseOutlined\";\n\n//import components\nimport ChipContainer from \"./ChipContainer\";\n\n// import constants\nimport { chipColor } from \"../../constants/colorsConst\";\n\n\nexport default function ChangeChipsPallet({ closeHandle }) {\n  return (\n    <Card\n      sx={{\n        display: \"flex\",\n        flexDirection: \"Column\",\n        alignItems: \"center\",\n        height: \"fit-content\",\n        paddingX: \"12px\",\n      }}\n    >\n      <CardHeader\n        sx={{\n          padding: \"5px\",\n          marginBottom: \"10px\",\n        }}\n        titleTypographyProps={{\n          fontSize: \"20px\",\n          color: \"#172b4d\",\n        }}\n        title=\"Метки\"\n        action={\n          <IconButton\n            onClick={closeHandle}\n            aria-label=\"Change-Chips-Pallet\"\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              right: \"-86px\",\n            }}\n          >\n            <CloseOutlinedIcon sx={{ fontSize: \"18px\" }} />\n          </IconButton>\n        }\n      />\n      <TextField\n        label=\"Искать метки\"\n        id=\"search-chip\"\n        size=\"small\"\n        autoFocus={true}\n        sx={{\n          width: \"260px\",\n          marginBottom: \"10px\",\n        }}\n      />\n\n      <CardContent\n        sx={{\n          padding: \"0px\",\n        }}\n      >\n        <List>\n          {[\n            0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\n            // 15, 16, 17, 18, 19, 20, 21,\n            // 22, 23, 24, 25, 26, 27, 28, 29,\n          ].map((value) => {\n            const labelId = `checkbox-list-label-${value}`;\n            return (\n              <ListItem key={value} disablePadding>\n                <ChipContainer color={chipColor[value]} labelId={labelId} />\n              </ListItem>\n            );\n          })}\n        </List>\n      </CardContent>\n      <CardActions\n        disableSpacing\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          width: \"100%\",\n        }}\n      >\n        <Button\n          variant=\"contained\"\n          sx={{\n            width: \"100%\",\n            height: \"32px\",\n            fontSize: \"14px\",\n            marginBottom: \"10px\",\n            backgroundColor: \"#d7d7d7\",\n            color: \"#172b4d\",\n            \"&:hover\": {\n              backgroundColor: \"#e3e3e3\",\n            },\n          }}\n        >\n          Создать новую метку\n        </Button>\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          sx={{\n            width: \"100%\",\n            height: \"32px\",\n            fontSize: \"14px\",\n            marginBottom: \"10px\",\n            backgroundColor: \"#d7d7d7\",\n            color: \"#172b4d\",\n            \"&:hover\": {\n              backgroundColor: \"#e3e3e3\",\n            },\n          }}\n        >\n          Показать больше меток\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React from \"react\";\n\n//import MUI components\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport List from \"@mui/material/List\";\nimport ListSubheader from \"@mui/material/ListSubheader\";\nimport ListItem from \"@mui/material/ListItem\";\nimport Avatar from \"@mui/material/Avatar\";\nimport red from \"@mui/material/colors/red\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseOutlinedIcon from \"@mui/icons-material/CloseOutlined\";\nimport { ListItemAvatar } from \"@mui/material\";\n\nconst avatarPictStyle = {\n  width: \"28px\",\n  height: \"28px\",\n  marginRight: \"0px\",\n  bgcolor: red[500],\n};\n\nexport default function ChangeUsers({ closeHandle }) {\n  return (\n    <Card\n      sx={{\n        display: \"flex\",\n        flexDirection: \"Column\",\n        alignItems: \"center\",\n        height: \"fit-content\",\n        paddingX: \"12px\",\n        width:\"219px\"\n      }}\n    >\n      <CardHeader\n        sx={{\n          padding: \"10px\",\n          marginBottom: \"10px\",\n        }}\n        titleTypographyProps={{\n          fontSize: \"20px\",\n          color: \"#172b4d\",\n        }}\n        title=\"Участники\"\n        action={\n          <IconButton\n            onClick={closeHandle}\n            aria-label=\"Change-Chips-Pallet\"\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              right: \"-28px\",\n              backgroundColor:\"rgba(0, 0, 0, 0.14)\",\n            }}\n          >\n            <CloseOutlinedIcon sx={{ fontSize: \"18px\" }} />\n          </IconButton>\n        }\n      />\n      <CardContent\n        sx={{\n          padding: \"0px\",\n        }}\n      >\n        <List subheader={<ListSubheader sx={{lineHeight:\"32px\"}}>Пользователи на карточке</ListSubheader>}>\n          <ListItem\n          sx={{width:\"230px\", paddingX:\"4px\", paddingY:\"2px\"}}\n          >\n            <ListItemAvatar sx={{minWidth:\"28px\"}}>\n              <Avatar sx={avatarPictStyle} aria-label={`${\"L\"}-avatar-label`}>\n                {\"L\"}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText sx={{marginLeft:\"8px\"}}>{'Leonardo'}</ListItemText>\n          </ListItem>\n          <ListItem\n          sx={{width:\"230px\", paddingX:\"4px\", paddingY:\"2px\"}}\n          >\n            <ListItemAvatar sx={{minWidth:\"28px\"}}>\n              <Avatar sx={avatarPictStyle} aria-label={`${\"D\"}-avatar-label`}>\n                {\"D\"}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText sx={{marginLeft:\"8px\"}}>{'Donatello'}</ListItemText>\n          </ListItem>\n\n        </List>\n\n        <List subheader={<ListSubheader sx={{lineHeight:\"32px\"}}>Пользователи на доске</ListSubheader>}>\n          <ListItem\n          sx={{width:\"230px\", paddingX:\"4px\", paddingY:\"2px\"}}\n          >\n            <ListItemAvatar sx={{minWidth:\"28px\"}}>\n              <Avatar sx={avatarPictStyle} aria-label={`${\"M\"}-avatar-label`}>\n                {\"M\"}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText sx={{marginLeft:\"8px\"}}>{'Mikelangelo'}</ListItemText>\n          </ListItem>\n          <ListItem\n          sx={{width:\"230px\", paddingX:\"4px\", paddingY:\"2px\"}}\n          >\n            <ListItemAvatar sx={{minWidth:\"28px\"}}>\n              <Avatar sx={avatarPictStyle} aria-label={`${\"R\"}-avatar-label`}>\n                {\"R\"}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText sx={{marginLeft:\"8px\"}}>{'Rafael'}</ListItemText>\n          </ListItem>\n\n        </List>\n\n      </CardContent>\n      <CardActions\n        disableSpacing\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          width: \"100%\",\n        }}\n      ></CardActions>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport \"./Calendar.css\";\nimport Calendar from \"react-calendar\";\n\nimport Box from \"@mui/material/Box\";\n\nexport default function Dates({\n  getDayHandler,\n  calendarValue,\n  startDayChecked,\n  completitionDayChecked,\n}) {\n\n  return (\n    <Box\n      sx={{\n        marginBottom: \"45px\",\n      }}\n    >\n      <Calendar\n        selectRange={startDayChecked && completitionDayChecked}\n        onChange={(calendarValue) => getDayHandler(calendarValue)}\n        value={calendarValue}\n      />\n    </Box>\n  );\n}\n","import React from \"react\";\nimport \"./Period.css\";\nimport Box from \"@mui/material/Box\";\n\nimport { DateField } from \"@mui/x-date-pickers/DateField\";\nimport { TimeField } from \"@mui/x-date-pickers/TimeField/\";\n\nimport Checkbox from \"@mui/material/Checkbox\";\n\nexport default function Period({\n  startDayValue,\n  completitionDayValue,\n  getCompletitionTimeHandler,\n  completitionTimeValue,\n  getstartDayCheckedHandler,\n  startDayChecked,\n  getcompletitionDayCheckedHandler,\n  completitionDayChecked,\n  defaultValue,\n}) {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          marginBottom: \"25px\",\n        }}\n      >\n        <Checkbox\n          checked={startDayChecked}\n          onChange={(event) => getstartDayCheckedHandler(event.target.checked)}\n        />\n        <DateField\n          control={\"control\"}\n          label=\"Начало\"\n          size=\"small\"\n          disabled={!startDayChecked}\n          format=\"d:M:yyyy\"\n          timezone=\"UTC\"\n          defaultValue={defaultValue}\n          value={startDayValue}\n          id={\"task-start-day\"}\n          sx={{\n            width: \"115px\",\n          }}\n        />\n      </Box>\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          marginBottom: \"30px\",\n        }}\n      >\n        <Checkbox\n          checked={completitionDayChecked}\n          onChange={(event) => getcompletitionDayCheckedHandler(event.target.checked)}\n        />\n        <DateField\n          control={\"control\"}\n          label=\"Завершение\"\n          size=\"small\"\n          disabled={!completitionDayChecked}\n          format=\"dd:MM:yyyy\"\n          timezone=\"UTC\"\n          defaultValue={defaultValue}\n          value={completitionDayValue}\n          id={\"task-completition-day\"}\n          sx={{\n            width: \"115px\",\n            marginRight: \"20px\",\n          }}\n        />\n        <TimeField\n          label=\"Время\"\n          size=\"small\"\n          disabled={!completitionDayChecked}\n          ampm={false}\n          defaultValue={defaultValue}\n          value={completitionTimeValue}\n          onChange={(completitionTimeValue) => getCompletitionTimeHandler(completitionTimeValue)}\n          id={\"task-completition-time\"}\n          sx={{\n            width: \"80px\",\n          }}\n        />\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Select from \"@mui/material/Select\";\nimport Typography from \"@mui/material/Typography\";\n\nconst typographyStyle = {\n  verticalAligne: \"top\",\n  overflow: \"visible\",\n  fontSize: \"14px\",\n  fontWeight: \"400\",\n  lineHeight: \"1.4\",\n  clolr: \"#172b4d\",\n};\n\nexport default function Remainder() {\n  const [remainder, seRemainder] = React.useState(80);\n\n  const handleChange = (event) => {\n    seRemainder(event.target.value);\n  };\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        marginBottom: \"15px\",\n      }}\n    >\n      <InputLabel id=\"remainder-label\">Установить напоминание</InputLabel>\n\n      <Select\n        labelId=\"remainder-label\"\n        id=\"remainder-select\"\n        value={remainder}\n        label=\"Установить напоминание\"\n        onChange={handleChange}\n        sx={{\n          marginBottom: \"10px\",\n          height: \"38px\",\n          fontSize: \"14px\",\n        }}\n      >\n        <MenuItem value={10}>Без даты</MenuItem>\n        <MenuItem value={20}>В указанное время</MenuItem>\n        <MenuItem value={30}>За 5 минут</MenuItem>\n        <MenuItem value={40}>За 10 минут</MenuItem>\n        <MenuItem value={50}>За 15 минут</MenuItem>\n        <MenuItem value={60}>За 1 час</MenuItem>\n        <MenuItem value={70}>За 2 часа</MenuItem>\n        <MenuItem value={80}>За 1 день</MenuItem>\n        <MenuItem value={90}>За 2 дня</MenuItem>\n      </Select>\n      <Typography sx={typographyStyle}>\n        Участники и подписчики этой карточки получат напомининия.\n      </Typography>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\n\nexport default function DateAndTimeButtonsGroup() {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        width: \"100%\",\n      }}\n    >\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        sx={{\n          width: \"100%\",\n          height: \"32px\",\n          fontSize: \"14px\",\n          marginBottom: \"10px\",\n        }}\n      >\n        Сохранить\n      </Button>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        size=\"large\"\n        sx={{\n          width: \"100%\",\n          height: \"32px\",\n          fontSize: \"14px\",\n          marginBottom: \"10px\",\n          backgroundColor: \"#d7d7d7\",\n          color: \"black\",\n          \"&:hover\": {\n            backgroundColor: \"#e3e3e3\",\n          }\n        }}\n      >\n        Удалить\n      </Button>\n    </Box>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseOutlinedIcon from \"@mui/icons-material/CloseOutlined\";\n\nimport Dates from \"./Calendar\";\nimport Period from \"./Period\";\nimport Remainder from \"./Reminder\";\nimport DateAndTimeButtonsGroup from \"./DateAndTimeButtonsGroup\";\n\nconst defaultValue = new Date();\n\nexport default function DatesAndTimePallet({ closeHandle }) {\n  const [calendarValue, setCalendarValue] = useState();\n  const [startDayValue, setStartDayValue] = useState(defaultValue);\n  const [completitionDayValue, setCompletitiontDayValue] = useState(defaultValue);\n  const [completitionTimeValue, setCompletitiontTimeValue] = useState(defaultValue);\n  const [startDayChecked, setStartDayChecked] = useState(false);\n  const [completitionDayChecked, setCompletitionDayChecked] = useState(false);\n\n  useEffect(() => {\n    if (calendarValue === undefined) return;\n\n    if (startDayChecked & completitionDayChecked) {\n      setStartDayValue(calendarValue[0]);\n      setCompletitiontDayValue(calendarValue[1]);\n    }\n\n    if (startDayChecked & !completitionDayChecked) {\n      setStartDayValue(calendarValue);\n    }\n\n    if (completitionDayChecked & !startDayChecked) {\n      setCompletitiontDayValue(calendarValue);\n    }\n  }, [calendarValue]);\n\n  const getDayHandler = (calendarValue) => {\n    setCalendarValue(calendarValue);\n  };\n\n  const getCompletitionTimeHandler = (completitionTimeValue) => {\n    setCompletitiontTimeValue(completitionTimeValue);\n  };\n\n  const getstartDayCheckedHandler = (startDayChecked) => {\n    setStartDayChecked(startDayChecked);\n  };\n\n  const getcompletitionDayCheckedHandler = (completitionDayChecked) => {\n    setCompletitionDayChecked(completitionDayChecked);\n  };\n\n  return (\n    <Card\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        aligneItems: \"center\",\n        borderRadius: \"10px\",\n        width: \"304px\",\n        height: \"fit-content\",\n        padding: \"12px\",\n        backgroundColor: \"#fff\",\n      }}\n    >\n      <CardHeader\n        sx={{\n          padding: \"10px\",\n          marginBottom: \"10px\",\n        }}\n        titleTypographyProps={{ textAlign: \"center\", fontSize: \"20px\", color: \"#172b4d\" }}\n        title=\"Даты и время\"\n        action={\n          <IconButton\n            onClick={closeHandle}\n            aria-label=\"Change-Chips-Pallet\"\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              right: \"8px\",\n              backgroundColor: \"rgba(0, 0, 0, 0.14)\",\n            }}\n          >\n            <CloseOutlinedIcon sx={{ fontSize: \"18px\" }} />\n          </IconButton>\n        }\n      />\n\n      <Dates\n        getDayHandler={getDayHandler}\n        calendarValue={calendarValue}\n        startDayChecked={startDayChecked}\n        completitionDayChecked={completitionDayChecked}\n      />\n      <Period\n        startDayValue={startDayValue}\n        completitionDayValue={completitionDayValue}\n        getCompletitionTimeHandler={getCompletitionTimeHandler}\n        completitionTimeValue={completitionTimeValue}\n        getstartDayCheckedHandler={getstartDayCheckedHandler}\n        startDayChecked={startDayChecked}\n        getcompletitionDayCheckedHandler={getcompletitionDayCheckedHandler}\n        completitionDayChecked={completitionDayChecked}\n        defaultValue={defaultValue}\n      />\n      <Remainder />\n      <DateAndTimeButtonsGroup />\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\n\n//import MIU components\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\nimport TaskCard from \"../TaskCard\";\nimport Box from \"@mui/material/Box\";\n\n//import components\nimport ChangeChipsPallet from \"../../ChangeChips/ChangeChipsPallet\";\nimport ChangeUsers from \"../ChangeUsers/ChangeUsers\";\nimport DatesAndTimePallet from \"../../DateAndTime/DatesAndTimePallet\";\n\nconst buttonStyle = {\n  height: \"32px\",\n  fontSize: \"14px\",\n  lineHeight: \"1.5\",\n  marginBottom: \"10px\",\n  backgroundColor: \"#d7d7d7\",\n  color: \"black\",\n  \"&:hover\": {\n    backgroundColor: \"#e3e3e3\",\n  },\n};\n\nexport default function EditButtonsGroup({ handleClickOpen }) {\n  const [typePop, setTypePop] = useState(0);\n\n  function closeHandle() {\n    setTypePop(0);\n  }\n\n  function Pop(type) {\n    let pop = null;\n\n    switch (type) {\n      case 1:\n        pop = <ChangeChipsPallet closeHandle={closeHandle} />;\n        break;\n\n      case 2:\n        pop = <ChangeUsers closeHandle={closeHandle} />;\n        break;\n      // case 3:\n        // pop = <ChangeUsers closeHandle={closeHandle} />;\n        // break;\n      case 4:\n        pop = <DatesAndTimePallet closeHandle={closeHandle} />;\n        break;\n\n      default:\n        break;\n    }\n    return <Box sx={{ margin: \"10px\" }}>{pop}</Box>;\n  }\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"nowrap\",\n        alignItems: \"flex-start\",\n        margin: \"10px\",\n      }}\n    >\n      <TaskCard />\n      {typePop === 0 ? (\n        <Box sx={{ margin: \"10px\" }}>\n          <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"flex-start\" spacing={1}>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              size=\"large\"\n              sx={buttonStyle}\n              onClick={() => handleClickOpen(1)}\n            >\n              Открыть карточку\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              size=\"large\"\n              sx={buttonStyle}\n              onClick={() => setTypePop(1)}\n            >\n              Изменить метки\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              size=\"large\"\n              sx={buttonStyle}\n              onClick={() => setTypePop(2)}\n            >\n              Изменить участников\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              size=\"large\"\n              sx={buttonStyle}\n              // onClick={() => setTypePop(3)}\n            >\n              Сменить обложку\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              size=\"large\"\n              sx={buttonStyle}\n              onClick={() => setTypePop(4)}\n            >\n              Изменить даты\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              size=\"large\"\n              sx={buttonStyle}\n              // onClick={HandleAddNewRowToCheckList}\n            >\n              Переместить\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              size=\"large\"\n              sx={buttonStyle}\n              // onClick={HandleAddNewRowToCheckList}\n            >\n              Архивировать\n            </Button>\n          </Stack>\n        </Box>\n      ) : null}\n\n      {Pop(typePop)}\n    </Box>\n  );\n}\n","import React, { useState } from \"react\";\r\nimport Draggable from \"react-draggable\";\r\n\r\nimport \"@fontsource/roboto/400.css\";\r\n//import MIU components\r\nimport Box from \"@mui/material/Box\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Paper from \"@mui/material/Paper\";\r\n\r\n//import MIU icons\r\nimport EditOutlinedIcon from \"@mui/icons-material/EditOutlined\";\r\nimport CloseOutlinedIcon from \"@mui/icons-material/CloseOutlined\";\r\n\r\n// import components\r\nimport CardImage from \"./CardImageSection/CardImage\";\r\nimport CardDescription from \"./CardDescriptionSection/CardDescription\";\r\nimport CardStatistic from \"./CardStatisticIconsSection/CardStatistic\";\r\nimport CardAvatarSection from \"./Avatar/CardAvatarSection\";\r\nimport CardChipContainer from \"./CardChipsSection/CardChipContainer\";\r\nimport AllSettingsOfCard from \"./AllSettingsOfCard/AllSettingsOfCard\";\r\nimport EditButtonsGroup from \"./EditButtonsGroup/EditButtonsGroup\";\r\n\r\nimport { useGetCardsQuery } from \"../../Redux/cards/cards-operations\";\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n      <Paper\r\n        sx={{\r\n          borderTopLeftRadius: \"16px\",\r\n          borderTopRightRadius: \"16px\",\r\n          backgroundColor: \"rgba(66, 66, 70, 0.82)\",\r\n        }}\r\n        {...props}\r\n      />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nconst cardStyle = {\r\n  display: \"block\",\r\n  position: \"relative\",\r\n  borderRadius: \"20px\",\r\n  margin: \"0px\",\r\n  padding: \"0px\",\r\n  width: \"256px\",\r\n  cursor: \"pointer\",\r\n  height: \"fit-content\",\r\n  \"&:hover\": {\r\n    boxShadow: \"3\",\r\n  },\r\n};\r\n\r\nconst CardContentStyle = {\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  flexWrap: \"wrap\",\r\n  minHeight: \"24px\",\r\n  paddingTop: \"8px\",\r\n  paddingX: \"12px\",\r\n  paddingBottom: \"4px\",\r\n};\r\n\r\nconst boxEditOutlinedIconStyle = {\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  position: \"absolute\",\r\n  top: \"8px\",\r\n  right: \"8px\",\r\n  width: \"40px\",\r\n  height: \"40px\",\r\n  borderRadius: \"20px\",\r\n\r\n  backgroundColor: \"#eaeaea\",\r\n  \"&:hover\": {\r\n    backgroundColor: \"#dbdbdb\",\r\n  },\r\n};\r\n\r\nexport default function TaskCard({\r\n  board,\r\n  checklist_how_many,\r\n  column,\r\n  comments_how_many,\r\n  created,\r\n  date_time_finish,\r\n  date_time_start,\r\n  header_color,\r\n  header_image,\r\n  id,\r\n  in_process,\r\n  is_archived,\r\n  is_subscribed,\r\n  is_have_description,\r\n  name,\r\n  position_in_column,\r\n  text,\r\n  status,\r\n  updated,\r\n}) {\r\n  const { data: cardData } = useGetCardsQuery(id);\r\n\r\n  const [showEditIcon, setShowEditIcon] = useState(false);\r\n  const [openPop, setOpenPop] = useState(false);\r\n  const [popupType, setPopupType] = useState(0);\r\n\r\n  function Pop(type, handleClickOpen, id, date_time_finish, date_time_start, status) {\r\n    let pop = null;\r\n\r\n    switch (type) {\r\n      case 1:\r\n        pop = (\r\n          <AllSettingsOfCard\r\n            date_time_finish={date_time_finish}\r\n            date_time_start={date_time_start}\r\n            status={status}\r\n            cardId={id}\r\n          />\r\n        );\r\n        break;\r\n      case 2:\r\n        pop = <EditButtonsGroup handleClickOpen={handleClickOpen} />;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n    return pop;\r\n  }\r\n\r\n  const handleClickOpen = (type) => {\r\n    setOpenPop(true);\r\n    switch (type) {\r\n      case 1:\r\n        setPopupType(type);\r\n        break;\r\n      case 2:\r\n        setPopupType(type);\r\n        break;\r\n      default:\r\n        setPopupType(0);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpenPop(false);\r\n    setPopupType(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        sx={cardStyle}\r\n        onMouseOver={() => setShowEditIcon(true)}\r\n        onMouseOut={() => setShowEditIcon(false)}\r\n      >\r\n        {showEditIcon && (\r\n          <Box sx={boxEditOutlinedIconStyle}>\r\n            <IconButton onClick={() => handleClickOpen(2)} aria-label=\"edit\">\r\n              <EditOutlinedIcon />\r\n            </IconButton>\r\n          </Box>\r\n        )}\r\n        <Box onClick={() => handleClickOpen(1)}>\r\n          <CardImage />\r\n          <CardContent sx={CardContentStyle}>\r\n            <CardChipContainer cardId={id} />\r\n            <CardDescription cardText={text} />\r\n            <CardStatistic\r\n              cardId={id}\r\n              is_subscribed={is_subscribed}\r\n              in_process={in_process}\r\n              comments_how_many={comments_how_many}\r\n              checklist_how_many={checklist_how_many}\r\n              is_have_description={is_have_description}\r\n              date_time_finish={date_time_finish}\r\n              date_time_start={date_time_start}\r\n              status={status}\r\n            />\r\n            <CardAvatarSection />\r\n          </CardContent>\r\n        </Box>\r\n      </Card>\r\n\r\n      <Dialog\r\n        sx={{ height: \"100%\", backgroundColor: \"rgba(0, 0, 0, 0.55)\" }}\r\n        // scroll=\"body\"\r\n        maxWidth={\"xl\"}\r\n        open={openPop}\r\n        onClose={handleClose}\r\n        PaperComponent={PaperComponent}\r\n        aria-labelledby=\"draggable-dialog-title\"\r\n      >\r\n        <DialogTitle\r\n          style={{\r\n            background: \"linear-gradient(rgb(93, 93, 96), rgba(21, 21, 23, 0.04))\",\r\n            paddingTop: \"6px\",\r\n            paddingBottom: \"8px\",\r\n            cursor: \"move\",\r\n            display: \"inline-flex\",\r\n            flexFlow: \"row\",\r\n            flexDirection: \"row-reverse\",\r\n            borderTopLeftRadius: \"16px\",\r\n            borderTopRightRadius: \"16px\",\r\n          }}\r\n          id=\"draggable-dialog-title\"\r\n        >\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            sx={{ backgroundColor: \"#777\", \"&:hover\": { backgroundColor: \"#ccc\" } }}\r\n            onClick={handleClose}\r\n          >\r\n            <CloseOutlinedIcon sx={{ color: \"#fff\" }} />\r\n          </IconButton>\r\n        </DialogTitle>\r\n        <DialogContent\r\n          sx={{\r\n            maxWidth: \"768px\",\r\n            // maxWidth: \"fit-content\",\r\n            overflowY: \"auto\",\r\n            overflowX: \"hidden\",\r\n            msOverflowStyle: \"none\" /* IE и Edge */,\r\n            scrollbarWidth: \"none\" /* Firefox */,\r\n            \"&::-webkit-scrollbar\": {\r\n              display: \"none\",\r\n            },\r\n            backgroundColor: \"#f5f5f5\",\r\n            paddingX: \"0px\",\r\n          }}\r\n        >\r\n          {Pop(popupType, handleClickOpen, id, date_time_finish, date_time_start, status)}\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n//import MUI components\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListSubheader from \"@mui/material/ListSubheader\";\n\n// import components\nimport TaskCard from \"../Card/TaskCard\";\n\nimport { useGetCardsQuery } from \"../../Redux/cards/cards-operations\";\nimport { columnData } from \"../../Redux/columns/column-slice\";\n\nexport default function Column({ width, height, id }) {\n  const {data: cards} = useGetCardsQuery(id)\n  const { columns } = useSelector(columnData);\n\n\n  return (\n    <List\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        flexWrap: \"nowrap\",\n        alignItems: \"center\",\n        alignContent: \"center\",\n        width: \"100%\",\n        maxWidth: \"280px\",\n        maxHeight: `${height - 90}px`,\n        marginTop: \"10px\",\n        borderRadius: \"4px\",\n        bgcolor: \"gray\",\n        boxShadow: \"10\",\n        overflow: \"auto\",\n        msOverflowStyle: \"none\" /* IE и Edge */,\n        scrollbarWidth: \"none\" /* Firefox */,\n        \"&::-webkit-scrollbar\": {\n          display: \"none\",\n        },\n      }}\n      subheader={\n        <ListSubheader\n          sx={{\n            width: \"100%\",\n            height: \"40px\",\n            textAlign: \"center\",\n          }}\n          titletypographyprops={{\n            fontSize: \"20px\",\n            color: \"#172b4d\",\n          }}\n        >\n          {\"В работе\"}\n        </ListSubheader>\n      }\n    >\n      {\n      !!cards &&\n      cards.map((card) => {\n        const { id, name, position_on_board } = card;\n        return (\n          <ListItem key={id}>\n            <TaskCard {...card}/>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n//import MUI components\nimport { Stack } from \"@mui/material\";\n\n//import components\nimport Column from \"../Components/Column/Column\";\nimport { boardData } from \"../Redux/board/board-slice\";\n\nimport { useGetColumnsQuery } from \"../Redux/columns/column-operations\";\n\nimport useWindowDimensions from \"../libs/useWindowDimentions\";\n\nexport default function ColumnsView() {\n  const boardDataFromState = useSelector(boardData);\n  const aitiveBoardId = boardDataFromState.id;\n\n  const { data: columns } = useGetColumnsQuery(aitiveBoardId);\n\n  const [width, height] = useWindowDimensions();\n\n  return (\n    <Stack\n      sx={{ height: `${height - 64}` }}\n      mt={2}\n      mx={2}\n      direction=\"row\"\n      justifyContent=\"flex-start\"\n      alignItems=\"flex-start\"\n      spacing={3}\n    >\n      {!!columns &&\n        columns.map((column) => {\n          const { id, name, position_on_board } = column;\n          return <Column key={id} height={height} id={id} />;\n        })}\n    </Stack>\n  );\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\n//import MUI components\nimport Box from \"@mui/material/Box\";\n\n//import components\n// import AllSettingsOfCard from \"../Components/Card/AllSettingsOfCard/AllSettingsOfCard\";\n// import RecipeReviewCard from \"../Components/Card/TaskCard\";\n// import DatesAndTimePallet from \"../Components/DateAndTime/DatesAndTimePallet\";\n// import ChangeChipsPallet from \"../Components/ChangeChips/ChangeChipsPallet\";\n// import CreateNewChip from \"../Components/ChangeChips/CreateNewChip\";\n\n//import utilites\nimport useWindowDimensions from \"../libs/useWindowDimentions\";\n\n//import states from Redux\nimport ColumnsView from \"./ColumnsView\";\nimport { boardData } from \"../Redux/board/board-slice\";\nimport { useGetBoardsQuery } from \"../Redux/board/board-operations\";\n\nexport default function BoardView() {\n  useGetBoardsQuery()\n  const boardDataFromState = useSelector(boardData);\n  const aitiveBoardId = boardDataFromState.id;\n\n  const [width, height] = useWindowDimensions();\n  return (\n    <Box\n      className=\"board\"\n      sx={{\n        marginTop: \"64px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"nowrap\",\n        height: `${height - 64}px`,\n      }}\n    >\n      {aitiveBoardId && <ColumnsView />}\n      {/* <AllSettingsOfCard />\n          <RecipeReviewCard /> \n          <DatesAndTimePallet />\n          <ChangeChipsPallet /> \n          <CreateNewChip /> */}\n    </Box>\n  );\n}\n"],"names":["getWindowDimensions","innerWidth","width","innerHeight","height","window","useWindowDimensions","windowDimensions","setWindowDimensions","useState","useEffect","handleResize","addEventListener","removeEventListener","CardImage","_jsx","CardMedia","sx","paddingBottom","zIndex","component","image","img1","alt","preventDefault","event","CardDescription","_ref","cardText","Link","href","underline","onClick","marginBottom","children","Typography","variant","color","fontSize","fontWeight","lineHeight","CardCommentsIcon","boxStyle","iconStyle","typographyStyle","comments_how_many","cardId","extTypographyStyle","data","commentData","useGetCommentsQuery","Tooltip","title","List","map","comment","id","text","ListItem","paddingY","_jsxs","placement","Box","Icon","TextsmsOutlinedIcon","length","chipColor","normal","hover","colorNumber","colorName","TaskTerminIcon","date_time_finish","date_time_start","status","inBlock","setInBlock","dateTimeStartFormated","format","Date","concat","dateTimeFinishFormated","extBoxStyle","paddingRight","borderRadius","backgroundColor","value","tempColor","extIconStyle","onMouseOver","onMouseOut","marginRight","CancelOutlinedIcon","AccessTimeOutlinedIcon","CardCheckListIcon","checklistData","useGetChecklistQuery","getChecked","checked","total","forEach","element","is_checked","checklist","CheckBoxOutlinedIcon","CardDescriptionIcon","SubjectOutlinedIcon","CardSubscribeIcon","VisibilityOutlinedIcon","containerStyle","display","flexWrap","minWidth","alignItems","aligneContent","justifyContent","verticalAligne","overflow","CardStatistic","is_subscribed","in_process","is_have_description","checklist_how_many","avatarPictStyle","bgcolor","red","transition","transform","UserAvatar","userName","Avatar","userNameArr","CardAvatarSection","AvatarGroup","max","CardChip","chipText","chipStyle","paragraph","followCursor","noWrap","boxStylehipContainer","flexDirection","chipStyleChipContainer","alignContent","marginX","boxStyleardChipContainer","minHeight","maxWidth","chipStyleCardChipContainer","chipStyleCreateNewChip","margin","CardChipContainer","chips","useGetChipsQuery","color_number","labelId","TextareaCardName","styled","BaseTextareaAutosize","TextareaChkListText","mainContainer","position","cardMedia","typographyCardName","cursor","padding","typographyOnTheColumn","marginTop","icon","left","linkOnTheColumn","textDecoration","textDecorationColor","role","basicOperationsWithCard","avatarBox","cheepsBox","boxShadow","addIconButton","cardActionsMainContainer","cardActionsContainer","paddingX","cardSubscrContainer","cardComplContainer","Header","textAreaText","setTextAreaText","_Fragment","Style","ArticleOutlinedIcon","disabled","placeholder","onChange","target","checkListArr","isChecked","isSelected","Users","IconButton","GroupAddOutlinedIcon","Cheeps","index","size","AddOutlinedIcon","Actions","complited","setComplited","subscribed","setSubscribed","FormControlLabel","control","Switch","inputProps","label","labelPlacement","Divider","orientation","Checkbox","TextEditor","style","ReactQuill","theme","modules","toolbar","list","indent","align","formats","content","console","log","Description","checkedRowsCounter","checkListItems","setProgress","newCheckListItems","progress","Math","round","ChkListCboxToggle","CheckboxID","setCheckListItems","ChkListTextEditToggle","type","IDofTheLastCreatedCheckListRow","addNewRowToCheckListTrig","setCheckListItemText","checkListItemText","setAddNewRowToCheckListTrig","isCancel","filter","el","HandleRemoveRowFromCheckList","HandleAddNewRowToCheckList","setIDofTheLastCreatedCheckListRow","newRowObj","Checklist","hideChecked","setHideChecked","Button","LinearProgress","item","LabelID","ListItemText","primary","defaultValue","autoFocus","required","AllSettingsOfCard","paddingLeft","className","ChipContainer","setValue","ListItemButton","undefined","dense","edge","tabIndex","disableRipple","EditOutlinedIcon","ChangeChipsPallet","closeHandle","Card","CardHeader","titleTypographyProps","action","right","CloseOutlinedIcon","TextField","CardContent","disablePadding","CardActions","disableSpacing","ChangeUsers","subheader","ListSubheader","ListItemAvatar","marginLeft","Dates","getDayHandler","calendarValue","startDayChecked","completitionDayChecked","Calendar","selectRange","Period","startDayValue","completitionDayValue","getCompletitionTimeHandler","completitionTimeValue","getstartDayCheckedHandler","getcompletitionDayCheckedHandler","DateField","timezone","TimeField","ampm","clolr","Remainder","remainder","seRemainder","React","InputLabel","Select","MenuItem","DateAndTimeButtonsGroup","DatesAndTimePallet","setCalendarValue","setStartDayValue","setCompletitiontDayValue","setCompletitiontTimeValue","setStartDayChecked","setCompletitionDayChecked","aligneItems","textAlign","buttonStyle","EditButtonsGroup","handleClickOpen","typePop","setTypePop","TaskCard","Stack","direction","spacing","pop","Pop","PaperComponent","props","Draggable","handle","cancel","Paper","borderTopLeftRadius","borderTopRightRadius","cardStyle","CardContentStyle","paddingTop","boxEditOutlinedIconStyle","top","board","column","created","header_color","header_image","is_archived","name","position_in_column","updated","cardData","useGetCardsQuery","showEditIcon","setShowEditIcon","openPop","setOpenPop","popupType","setPopupType","handleClose","Dialog","open","onClose","DialogTitle","background","flexFlow","DialogContent","overflowY","overflowX","msOverflowStyle","scrollbarWidth","Column","cards","columns","useSelector","columnData","maxHeight","titletypographyprops","card","position_on_board","ColumnsView","aitiveBoardId","boardData","useGetColumnsQuery","mt","mx","BoardView","useGetBoardsQuery"],"sourceRoot":""}